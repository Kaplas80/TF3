{
  "api/TF3.Common.Core.Exceptions.ChecksumMismatchException.html": {
    "href": "api/TF3.Common.Core.Exceptions.ChecksumMismatchException.html",
    "title": "Class ChecksumMismatchException | Translation Framework v3",
    "keywords": "Class ChecksumMismatchException Exception thrown when checksum doesn't match with the expected one. Inheritance Object ChecksumMismatchException Namespace : TF3.Common.Core.Exceptions Assembly : TF3.Core.dll Syntax public class ChecksumMismatchException : Exception Constructors | Improve this Doc View Source ChecksumMismatchException() Initializes a new instance of the ChecksumMismatchException class. Declaration public ChecksumMismatchException() | Improve this Doc View Source ChecksumMismatchException(SerializationInfo, StreamingContext) Initializes a new instance of the ChecksumMismatchException class. Declaration protected ChecksumMismatchException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source ChecksumMismatchException(String) Initializes a new instance of the ChecksumMismatchException class. Declaration public ChecksumMismatchException(string message) Parameters Type Name Description String message The error message that explains the reason for the exception. | Improve this Doc View Source ChecksumMismatchException(String, Exception) Initializes a new instance of the ChecksumMismatchException class. Declaration public ChecksumMismatchException(string message, Exception innerException) Parameters Type Name Description String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/TF3.Common.Core.Exceptions.html": {
    "href": "api/TF3.Common.Core.Exceptions.html",
    "title": "Namespace TF3.Common.Core.Exceptions | Translation Framework v3",
    "keywords": "Namespace TF3.Common.Core.Exceptions Classes ChecksumMismatchException Exception thrown when checksum doesn't match with the expected one. UnknownConverterException Exception thrown when a Yarhl converter is not found."
  },
  "api/TF3.Common.Core.Exceptions.UnknownConverterException.html": {
    "href": "api/TF3.Common.Core.Exceptions.UnknownConverterException.html",
    "title": "Class UnknownConverterException | Translation Framework v3",
    "keywords": "Class UnknownConverterException Exception thrown when a Yarhl converter is not found. Inheritance Object UnknownConverterException Namespace : TF3.Common.Core.Exceptions Assembly : TF3.Core.dll Syntax public class UnknownConverterException : Exception Constructors | Improve this Doc View Source UnknownConverterException() Initializes a new instance of the UnknownConverterException class. Declaration public UnknownConverterException() | Improve this Doc View Source UnknownConverterException(SerializationInfo, StreamingContext) Initializes a new instance of the UnknownConverterException class. Declaration protected UnknownConverterException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source UnknownConverterException(String) Initializes a new instance of the UnknownConverterException class. Declaration public UnknownConverterException(string message) Parameters Type Name Description String message The error message that explains the reason for the exception. | Improve this Doc View Source UnknownConverterException(String, Exception) Initializes a new instance of the UnknownConverterException class. Declaration public UnknownConverterException(string message, Exception innerException) Parameters Type Name Description String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/TF3.Common.Core.GameScript.html": {
    "href": "api/TF3.Common.Core.GameScript.html",
    "title": "Class GameScript | Translation Framework v3",
    "keywords": "Class GameScript Game script. Includes all the needed info to extract and repack game files. Inheritance Object GameScript Namespace : TF3.Common.Core Assembly : TF3.Core.dll Syntax public class GameScript : object Properties | Improve this Doc View Source Assets Gets or sets the list of translatable assets. Declaration public List<AssetInfo> Assets { get; set; } Property Value Type Description List < AssetInfo > | Improve this Doc View Source Containers Gets or sets the list of containers in the game. Declaration public List<ContainerInfo> Containers { get; set; } Property Value Type Description List < ContainerInfo > | Improve this Doc View Source Game Gets or sets the script game name. Declaration public string Game { get; set; } Property Value Type Description String | Improve this Doc View Source Name Gets or sets the script name (short name). Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Parameters Gets or sets the list of parameters. Declaration public List<ParameterInfo> Parameters { get; set; } Property Value Type Description List < ParameterInfo > Methods | Improve this Doc View Source ExtractAssets(String, String) Extracts all translatable assets from the game. Declaration public void ExtractAssets(string gamePath, string outputPath) Parameters Type Name Description String gamePath Game install directory. String outputPath Output directory. | Improve this Doc View Source RebuildAssets(String, String, String) Rebuild all translatable assets from the game. Declaration public void RebuildAssets(string gamePath, string translationPath, string outputPath) Parameters Type Name Description String gamePath Game install directory. String translationPath Translation directory. String outputPath Output directory."
  },
  "api/TF3.Common.Core.Helpers.ChecksumHelper.html": {
    "href": "api/TF3.Common.Core.Helpers.ChecksumHelper.html",
    "title": "Class ChecksumHelper | Translation Framework v3",
    "keywords": "Class ChecksumHelper Checksum functions. Inheritance Object ChecksumHelper Namespace : TF3.Common.Core.Helpers Assembly : TF3.Core.dll Syntax public static class ChecksumHelper : object Methods | Improve this Doc View Source Calculate(Stream) Calculate the checksum of a stream. Declaration public static ulong Calculate(Stream stream) Parameters Type Name Description Stream stream The input stream. Returns Type Description UInt64 The checksum value. | Improve this Doc View Source Calculate(String) Calculate the checksum of a file. Declaration public static ulong Calculate(string file) Parameters Type Name Description String file The input file. Returns Type Description UInt64 The checksum value. | Improve this Doc View Source Check(Stream, UInt64) Validates the checksum of a stream. Declaration public static bool Check(Stream stream, ulong expected) Parameters Type Name Description Stream stream The input stream. UInt64 expected The expected checksum value. Returns Type Description Boolean True if checksum matches with the expected value. | Improve this Doc View Source Check(String, UInt64) Validates the checksum of a file. Declaration public static bool Check(string file, ulong expected) Parameters Type Name Description String file The input file. UInt64 expected The expected checksum value. Returns Type Description Boolean True if checksum matches with the expected value."
  },
  "api/TF3.Common.Core.Helpers.html": {
    "href": "api/TF3.Common.Core.Helpers.html",
    "title": "Namespace TF3.Common.Core.Helpers | Translation Framework v3",
    "keywords": "Namespace TF3.Common.Core.Helpers Classes ChecksumHelper Checksum functions. YarhlNodeExtension Node extension methods."
  },
  "api/TF3.Common.Core.Helpers.YarhlNodeExtension.html": {
    "href": "api/TF3.Common.Core.Helpers.YarhlNodeExtension.html",
    "title": "Class YarhlNodeExtension | Translation Framework v3",
    "keywords": "Class YarhlNodeExtension Node extension methods. Inheritance Object YarhlNodeExtension Namespace : TF3.Common.Core.Helpers Assembly : TF3.Core.dll Syntax public static class YarhlNodeExtension : object Methods | Improve this Doc View Source Transform(Node, List<ConverterInfo>, List<ParameterInfo>) Transforms a Yarhl node using a chain of converters. Declaration public static void Transform(this Node node, List<ConverterInfo> converters, List<ParameterInfo> parameters) Parameters Type Name Description Node node The original node. List < ConverterInfo > converters Converters list. List < ParameterInfo > parameters Allowed parameters list. | Improve this Doc View Source Translate(Node, Node, String) Calls a translator converter. Declaration public static void Translate(this Node node, Node translation, string translator) Parameters Type Name Description Node node The original node. Node translation The node with the translation. String translator The translator converter."
  },
  "api/TF3.Common.Core.html": {
    "href": "api/TF3.Common.Core.html",
    "title": "Namespace TF3.Common.Core | Translation Framework v3",
    "keywords": "Namespace TF3.Common.Core Classes GameScript Game script. Includes all the needed info to extract and repack game files. ScriptManager Script manager."
  },
  "api/TF3.Common.Core.Models.AssetInfo.html": {
    "href": "api/TF3.Common.Core.Models.AssetInfo.html",
    "title": "Class AssetInfo | Translation Framework v3",
    "keywords": "Class AssetInfo Game asset info. Inheritance Object AssetInfo Namespace : TF3.Common.Core.Models Assembly : TF3.Core.dll Syntax public class AssetInfo : object Properties | Improve this Doc View Source Extractors Gets or sets the list of converters needed to extract the translatable contents. Declaration public List<ConverterInfo> Extractors { get; set; } Property Value Type Description List < ConverterInfo > | Improve this Doc View Source Files Gets or sets the list of files in this asset. Declaration public List<FileInfo> Files { get; set; } Property Value Type Description List < FileInfo > | Improve this Doc View Source Id Gets or sets the asset id. Declaration public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source Mergers Gets or sets the list of converters needed to merge the asset files into a single format. Declaration public List<ConverterInfo> Mergers { get; set; } Property Value Type Description List < ConverterInfo > | Improve this Doc View Source OutputNames Gets or sets the list of output names. Declaration public List<string> OutputNames { get; set; } Property Value Type Description List < String > | Improve this Doc View Source Splitters Gets or sets the list of converters needed to split the asset format into files. Declaration public List<ConverterInfo> Splitters { get; set; } Property Value Type Description List < ConverterInfo > | Improve this Doc View Source TranslationMergers Gets or sets the list of converters needed to merge the translation files into a single node format. Declaration public List<ConverterInfo> TranslationMergers { get; set; } Property Value Type Description List < ConverterInfo > | Improve this Doc View Source Translator Gets or sets the name of the translator converter. Declaration public string Translator { get; set; } Property Value Type Description String"
  },
  "api/TF3.Common.Core.Models.ContainerInfo.html": {
    "href": "api/TF3.Common.Core.Models.ContainerInfo.html",
    "title": "Class ContainerInfo | Translation Framework v3",
    "keywords": "Class ContainerInfo Game file container info. Inheritance Object ContainerInfo Namespace : TF3.Common.Core.Models Assembly : TF3.Core.dll Syntax public class ContainerInfo : object Properties | Improve this Doc View Source Checksum Gets or sets the container checksum. If it is 0, it won't be checked. Declaration public ulong Checksum { get; set; } Property Value Type Description UInt64 | Improve this Doc View Source Containers Gets or sets the list of containers in this container. Declaration public List<ContainerInfo> Containers { get; set; } Property Value Type Description List < ContainerInfo > | Improve this Doc View Source Id Gets or sets the container id. Declaration public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source Name Gets or sets the container name. Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Path Gets or sets the container path. Declaration public string Path { get; set; } Property Value Type Description String | Improve this Doc View Source Readers Gets or sets the list of converters needed to read the container. Declaration public List<ConverterInfo> Readers { get; set; } Property Value Type Description List < ConverterInfo > | Improve this Doc View Source Writers Gets or sets the list of converters needed to write the container. Declaration public List<ConverterInfo> Writers { get; set; } Property Value Type Description List < ConverterInfo >"
  },
  "api/TF3.Common.Core.Models.ConverterInfo.html": {
    "href": "api/TF3.Common.Core.Models.ConverterInfo.html",
    "title": "Class ConverterInfo | Translation Framework v3",
    "keywords": "Class ConverterInfo Yarhl converter info. Inheritance Object ConverterInfo Namespace : TF3.Common.Core.Models Assembly : TF3.Core.dll Syntax public class ConverterInfo : object Properties | Improve this Doc View Source ParameterId Gets or sets the converter parameter id. Declaration public string ParameterId { get; set; } Property Value Type Description String | Improve this Doc View Source TypeName Gets or sets the converter type name. Declaration public string TypeName { get; set; } Property Value Type Description String"
  },
  "api/TF3.Common.Core.Models.FileInfo.html": {
    "href": "api/TF3.Common.Core.Models.FileInfo.html",
    "title": "Class FileInfo | Translation Framework v3",
    "keywords": "Class FileInfo Game file info. Inheritance Object FileInfo Namespace : TF3.Common.Core.Models Assembly : TF3.Core.dll Syntax public class FileInfo : object Properties | Improve this Doc View Source Checksum Gets or sets the file checksum. If it is 0, it won't be checked. Declaration public ulong Checksum { get; set; } Property Value Type Description UInt64 | Improve this Doc View Source ContainerId Gets or sets the container id. Declaration public string ContainerId { get; set; } Property Value Type Description String | Improve this Doc View Source Name Gets or sets the file name. Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Path Gets or sets the file path (inside the container). Declaration public string Path { get; set; } Property Value Type Description String | Improve this Doc View Source Readers Gets or sets the list of converters needed to read the file. Declaration public List<ConverterInfo> Readers { get; set; } Property Value Type Description List < ConverterInfo > | Improve this Doc View Source Writers Gets or sets the list of converters needed to write the file. Declaration public List<ConverterInfo> Writers { get; set; } Property Value Type Description List < ConverterInfo >"
  },
  "api/TF3.Common.Core.Models.html": {
    "href": "api/TF3.Common.Core.Models.html",
    "title": "Namespace TF3.Common.Core.Models | Translation Framework v3",
    "keywords": "Namespace TF3.Common.Core.Models Classes AssetInfo Game asset info. ContainerInfo Game file container info. ConverterInfo Yarhl converter info. FileInfo Game file info. ParameterInfo Converter parameter info."
  },
  "api/TF3.Common.Core.Models.ParameterInfo.html": {
    "href": "api/TF3.Common.Core.Models.ParameterInfo.html",
    "title": "Class ParameterInfo | Translation Framework v3",
    "keywords": "Class ParameterInfo Converter parameter info. Inheritance Object ParameterInfo Namespace : TF3.Common.Core.Models Assembly : TF3.Core.dll Syntax public class ParameterInfo : object Properties | Improve this Doc View Source Id Gets or sets the parameter id. Declaration public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source TypeName Gets or sets the parameter type name. Declaration public string TypeName { get; set; } Property Value Type Description String | Improve this Doc View Source Value Gets or sets the parameter value. Declaration public object Value { get; set; } Property Value Type Description Object"
  },
  "api/TF3.Common.Core.ScriptManager.html": {
    "href": "api/TF3.Common.Core.ScriptManager.html",
    "title": "Class ScriptManager | Translation Framework v3",
    "keywords": "Class ScriptManager Script manager. Inheritance Object ScriptManager Namespace : TF3.Common.Core Assembly : TF3.Core.dll Syntax public static class ScriptManager : object Properties | Improve this Doc View Source Scripts Gets a list of loaded scripts. Declaration public static IReadOnlyList<GameScript> Scripts { get; } Property Value Type Description IReadOnlyList < GameScript > Methods | Improve this Doc View Source LoadScripts(String) Loads all the scripts in a directory. Declaration public static void LoadScripts(string path) Parameters Type Name Description String path The directory containing the scripts."
  },
  "api/TF3.Common.Core.Yaml.html": {
    "href": "api/TF3.Common.Core.Yaml.html",
    "title": "Namespace TF3.Common.Core.Yaml | Translation Framework v3",
    "keywords": "Namespace TF3.Common.Core.Yaml Classes ParameterInfoTypeConverter YamlDotNet type converter for ParameterInfo."
  },
  "api/TF3.Common.Core.Yaml.ParameterInfoTypeConverter.html": {
    "href": "api/TF3.Common.Core.Yaml.ParameterInfoTypeConverter.html",
    "title": "Class ParameterInfoTypeConverter | Translation Framework v3",
    "keywords": "Class ParameterInfoTypeConverter YamlDotNet type converter for ParameterInfo. Inheritance Object ParameterInfoTypeConverter Namespace : TF3.Common.Core.Yaml Assembly : TF3.Core.dll Syntax public class ParameterInfoTypeConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Declaration public bool Accepts(Type type) Parameters Type Name Description Type type Returns Type Description Boolean | Improve this Doc View Source ReadYaml(IParser, Type) Declaration public object ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser Type type Returns Type Description Object | Improve this Doc View Source WriteYaml(IEmitter, Object, Type) Declaration public void WriteYaml(IEmitter emitter, object value, Type type) Parameters Type Name Description IEmitter emitter Object value Type type"
  },
  "api/TF3.Core.Converters.FormatToSingleNode.html": {
    "href": "api/TF3.Core.Converters.FormatToSingleNode.html",
    "title": "Class FormatToSingleNode | Translation Framework v3",
    "keywords": "Class FormatToSingleNode Converts a IFormat to a NodeContainerFormat. Inheritance Object FormatToSingleNode Implements IInitializer < String > Namespace : TF3.Core.Converters Assembly : TF3.Core.dll Syntax public class FormatToSingleNode : IConverter<IFormat, NodeContainerFormat>, IInitializer<string> Methods | Improve this Doc View Source Convert(IFormat) Convert a format to a single node NodeContainerFormat. Declaration public NodeContainerFormat Convert(IFormat source) Parameters Type Name Description IFormat source A format. Returns Type Description NodeContainerFormat The 'single node' NodeContainerFormat. | Improve this Doc View Source Initialize(String) Set the node name. Declaration public void Initialize(string parameters) Parameters Type Name Description String parameters Node name. Implements IInitializer<>"
  },
  "api/TF3.Core.Converters.html": {
    "href": "api/TF3.Core.Converters.html",
    "title": "Namespace TF3.Core.Converters | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Converters Classes FormatToSingleNode Converts a IFormat to a NodeContainerFormat. SingleNodeToFormat Converts a NodeContainerFormat to the format of the first children."
  },
  "api/TF3.Core.Converters.SingleNodeToFormat.html": {
    "href": "api/TF3.Core.Converters.SingleNodeToFormat.html",
    "title": "Class SingleNodeToFormat | Translation Framework v3",
    "keywords": "Class SingleNodeToFormat Converts a NodeContainerFormat to the format of the first children. Inheritance Object SingleNodeToFormat Namespace : TF3.Core.Converters Assembly : TF3.Core.dll Syntax public class SingleNodeToFormat : IConverter<NodeContainerFormat, IFormat> Methods | Improve this Doc View Source Convert(NodeContainerFormat) Convert a NodeContainerFormat to the format of the first children. Declaration public IFormat Convert(NodeContainerFormat source) Parameters Type Name Description NodeContainerFormat source A 'single node' NodeContainerFormat. Returns Type Description IFormat The format of the node."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaCommon.Converters.Par | Translation Framework v3",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaCommon.Converters.Par Classes Reader Deserializes PAR archives. Writer Serializes PAR archives. WriterParameters Parameters for PAR writer."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.Reader.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.Reader.html",
    "title": "Class Reader | Translation Framework v3",
    "keywords": "Class Reader Deserializes PAR archives. Inheritance Object Reader Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Par Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class Reader : IConverter<BinaryFormat, NodeContainerFormat> Methods | Improve this Doc View Source Convert(BinaryFormat) Converts a BinaryFormat into a NodeContainerFormat. Declaration public virtual NodeContainerFormat Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Input format. Returns Type Description NodeContainerFormat The node container format."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.Writer.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.Writer.html",
    "title": "Class Writer | Translation Framework v3",
    "keywords": "Class Writer Serializes PAR archives. Inheritance Object Writer Implements IInitializer < WriterParameters > Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Par Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class Writer : IConverter<NodeContainerFormat, BinaryFormat>, IInitializer<WriterParameters> Methods | Improve this Doc View Source Convert(NodeContainerFormat) Converts a NodeContainerFormat into a BinaryFormat. Declaration public virtual BinaryFormat Convert(NodeContainerFormat source) Parameters Type Name Description NodeContainerFormat source Input format. Returns Type Description BinaryFormat The node container format. | Improve this Doc View Source Initialize(WriterParameters) Initializes the writer parameters. Declaration public void Initialize(WriterParameters parameters) Parameters Type Name Description WriterParameters parameters Writer configuration. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.WriterParameters.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Par.WriterParameters.html",
    "title": "Class WriterParameters | Translation Framework v3",
    "keywords": "Class WriterParameters Parameters for PAR writer. Inheritance Object WriterParameters Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Par Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class WriterParameters : object Properties | Improve this Doc View Source Endianness Gets or sets the compression algorithm endianness. Declaration public Endianness Endianness { get; set; } Property Value Type Description Endianness | Improve this Doc View Source OutputStream Gets or sets the DataStream to write the file. Declaration public DataStream OutputStream { get; set; } Property Value Type Description DataStream Remarks It can be null. In that case, it will be written in memory. | Improve this Doc View Source PlatformId Gets or sets the platform id. Declaration public Platform PlatformId { get; set; } Property Value Type Description Platform | Improve this Doc View Source Version Gets or sets the version (usually 0x00020001). Declaration public uint Version { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source WriteDataSize Gets or sets a value indicating whether the data size is written in header (only in Kenzan). Declaration public bool WriteDataSize { get; set; } Property Value Type Description Boolean"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.Compress.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.Compress.html",
    "title": "Class Compress | Translation Framework v3",
    "keywords": "Class Compress Creates SLLZ files. Inheritance Object Compress Implements IInitializer < CompressorParameters > Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class Compress : IConverter<BinaryFormat, ParFile>, IInitializer<CompressorParameters> Methods | Improve this Doc View Source Convert(BinaryFormat) Create a SLLZ compressed BinaryFormat. Declaration public ParFile Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source original format. Returns Type Description ParFile The compressed binary. | Improve this Doc View Source Initialize(CompressorParameters) Initializes the compressor parameters. Declaration public void Initialize(CompressorParameters parameters) Parameters Type Name Description CompressorParameters parameters Compressor configuration. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.CompressorParameters.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.CompressorParameters.html",
    "title": "Class CompressorParameters | Translation Framework v3",
    "keywords": "Class CompressorParameters Parameters for SLLZ compressor. Inheritance Object CompressorParameters Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class CompressorParameters : object Properties | Improve this Doc View Source CompressionType Gets or sets the compression algorithm type. Declaration public CompressionType CompressionType { get; set; } Property Value Type Description CompressionType | Improve this Doc View Source Endianness Gets or sets the compression algorithm endianness. Declaration public Endianness Endianness { get; set; } Property Value Type Description Endianness | Improve this Doc View Source OutputStream Gets or sets the DataStream to write the file. Declaration public DataStream OutputStream { get; set; } Property Value Type Description DataStream Remarks It can be null. In that case, it will be written in memory."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.CompressStandard.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.CompressStandard.html",
    "title": "Class CompressStandard | Translation Framework v3",
    "keywords": "Class CompressStandard Compress SLLZ standard files. Inheritance Object CompressStandard Implements IInitializer < CompressorParameters > Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class CompressStandard : IConverter<BinaryFormat, ParFile>, IInitializer<CompressorParameters> Methods | Improve this Doc View Source Convert(BinaryFormat) Creates a SLLZ standard compressed BinaryFormat. Declaration public ParFile Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Original format. Returns Type Description ParFile The compressed binary. | Improve this Doc View Source Initialize(CompressorParameters) Initializes the compressor parameters. Declaration public void Initialize(CompressorParameters parameters) Parameters Type Name Description CompressorParameters parameters Compressor configuration. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.CompressZlib.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.CompressZlib.html",
    "title": "Class CompressZlib | Translation Framework v3",
    "keywords": "Class CompressZlib Compress SLLZ zlib files. Inheritance Object CompressZlib Implements IInitializer < CompressorParameters > Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class CompressZlib : IConverter<BinaryFormat, ParFile>, IInitializer<CompressorParameters> Methods | Improve this Doc View Source Convert(BinaryFormat) Creates a SLLZ zlib compressed BinaryFormat. Declaration public ParFile Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Original format. Returns Type Description ParFile The compressed binary. | Improve this Doc View Source Initialize(CompressorParameters) Initializes the compressor parameters. Declaration public void Initialize(CompressorParameters parameters) Parameters Type Name Description CompressorParameters parameters Compressor configuration. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.Decompress.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.Decompress.html",
    "title": "Class Decompress | Translation Framework v3",
    "keywords": "Class Decompress Decompress SLLZ files. Inheritance Object Decompress Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class Decompress : IConverter<ParFile, ParFile> Methods | Improve this Doc View Source Convert(ParFile) Decompress a SLLZ compressed BinaryFormat. Declaration public ParFile Convert(ParFile source) Parameters Type Name Description ParFile source Compressed format. Returns Type Description ParFile The decompressed binary."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.DecompressStandard.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.DecompressStandard.html",
    "title": "Class DecompressStandard | Translation Framework v3",
    "keywords": "Class DecompressStandard Decompress SLLZ standard files. Inheritance Object DecompressStandard Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class DecompressStandard : IConverter<ParFile, ParFile> Methods | Improve this Doc View Source Convert(ParFile) Decompress a SLLZ standard compressed BinaryFormat. Declaration public ParFile Convert(ParFile source) Parameters Type Name Description ParFile source Compressed format. Returns Type Description ParFile The decompressed binary."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.DecompressZlib.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.DecompressZlib.html",
    "title": "Class DecompressZlib | Translation Framework v3",
    "keywords": "Class DecompressZlib Decompress SLLZ zLib files. Inheritance Object DecompressZlib Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class DecompressZlib : IConverter<ParFile, ParFile> Methods | Improve this Doc View Source Convert(ParFile) Decompress a SLLZ zlib compressed BinaryFormat. Declaration public ParFile Convert(ParFile source) Parameters Type Name Description ParFile source Compressed format. Returns Type Description ParFile The decompressed binary."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz | Translation Framework v3",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Classes Compress Creates SLLZ files. CompressorParameters Parameters for SLLZ compressor. CompressStandard Compress SLLZ standard files. CompressZlib Compress SLLZ zlib files. Decompress Decompress SLLZ files. DecompressStandard Decompress SLLZ standard files. DecompressZlib Decompress SLLZ zLib files. SllzException SLLZ compressor exception."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.SllzException.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz.SllzException.html",
    "title": "Class SllzException | Translation Framework v3",
    "keywords": "Class SllzException SLLZ compressor exception. Inheritance Object SllzException Namespace : TF3.YarhlPlugin.YakuzaCommon.Converters.Sllz Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class SllzException : Exception Constructors | Improve this Doc View Source SllzException() Initializes a new instance of the SllzException class. Declaration public SllzException() | Improve this Doc View Source SllzException(SerializationInfo, StreamingContext) Initializes a new instance of the SllzException class. Declaration protected SllzException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info Serialization info. StreamingContext context Streaming context. | Improve this Doc View Source SllzException(String) Initializes a new instance of the SllzException class. Declaration public SllzException(string message) Parameters Type Name Description String message Exception message. | Improve this Doc View Source SllzException(String, System.Exception) Initializes a new instance of the SllzException class. Declaration public SllzException(string message, System.Exception innerException) Parameters Type Name Description String message Exception message. System.Exception innerException Inner exception."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Enums.CompressionType.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Enums.CompressionType.html",
    "title": "Enum CompressionType | Translation Framework v3",
    "keywords": "Enum CompressionType File compression types. Namespace : TF3.YarhlPlugin.YakuzaCommon.Enums Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public enum CompressionType : int Fields Name Description Standard Standard compression (LZ variant) Zlib Use zlib compression."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Enums.Endianness.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Enums.Endianness.html",
    "title": "Enum Endianness | Translation Framework v3",
    "keywords": "Enum Endianness Endianness (byte order). Namespace : TF3.YarhlPlugin.YakuzaCommon.Enums Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public enum Endianness : int Fields Name Description BigEndian Big endian LittleEndian Little endian"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Enums.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Enums.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaCommon.Enums | Translation Framework v3",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaCommon.Enums Enums CompressionType File compression types. Endianness Endianness (byte order). Platform Platforms ids. Only PlayStation3 is used in PAR archives."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Enums.Platform.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Enums.Platform.html",
    "title": "Enum Platform | Translation Framework v3",
    "keywords": "Enum Platform Platforms ids. Only PlayStation3 is used in PAR archives. Namespace : TF3.YarhlPlugin.YakuzaCommon.Enums Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public enum Platform : int Fields Name Description Durango Durango (Microsoft Xbox ONE codename) Generic Generic platform Nintendo3Ds Nintendo 3DS PlayStation3 Sony PlayStation 3 PlayStation4 Sony PlayStation 4 Vita Sony PS Vita Wii Nintendo Wii WiiU Nintendo Wii U Win32 Microsoft Windows 32bits Win64 Microsoft Windows 64bits Xbox360 Microsoft Xbox 360"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Formats.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Formats.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaCommon.Formats | Translation Framework v3",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaCommon.Formats Classes ParFile File inside a PAR container."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Formats.ParFile.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Formats.ParFile.html",
    "title": "Class ParFile | Translation Framework v3",
    "keywords": "Class ParFile File inside a PAR container. Inheritance Object ParFile Namespace : TF3.YarhlPlugin.YakuzaCommon.Formats Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class ParFile : BinaryFormat Constructors | Improve this Doc View Source ParFile(System.IO.Stream) Initializes a new instance of the ParFile class. Declaration public ParFile(System.IO.Stream stream) Parameters Type Name Description System.IO.Stream stream Binary stream. | Improve this Doc View Source ParFile(ParFileInfo, System.IO.Stream) Initializes a new instance of the ParFile class. Declaration public ParFile(ParFileInfo fileInfo, System.IO.Stream stream) Parameters Type Name Description ParFileInfo fileInfo File parameters. System.IO.Stream stream Binary stream. Properties | Improve this Doc View Source FileInfo Gets or sets the file parameters. Declaration public ParFileInfo FileInfo { get; set; } Property Value Type Description ParFileInfo"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Types.FileHeader.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Types.FileHeader.html",
    "title": "Class FileHeader | Translation Framework v3",
    "keywords": "Class FileHeader Archive header. Inheritance Object FileHeader Namespace : TF3.YarhlPlugin.YakuzaCommon.Types Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class FileHeader : object Properties | Improve this Doc View Source Endianness Gets or sets the file endianness. Declaration public Endianness Endianness { get; set; } Property Value Type Description Endianness | Improve this Doc View Source Magic Gets or sets the file magic number. Declaration public string Magic { get; set; } Property Value Type Description String | Improve this Doc View Source PlatformId Gets or sets the platform id value. Declaration public Platform PlatformId { get; set; } Property Value Type Description Platform | Improve this Doc View Source Relocated Gets or sets the relocated byte. Declaration public byte Relocated { get; set; } Property Value Type Description Byte | Improve this Doc View Source Size Gets or sets the data size. In newer versions it is always 0. Declaration public uint Size { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source SizeExtended Gets or sets the size extended byte. Declaration public byte SizeExtended { get; set; } Property Value Type Description Byte | Improve this Doc View Source Version Gets or sets the version value. Declaration public uint Version { get; set; } Property Value Type Description UInt32"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Types.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Types.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaCommon.Types | Translation Framework v3",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaCommon.Types Classes FileHeader Archive header. ParDirectoryInfo Par directory info. ParFileInfo Par file info. ParIndex Par archive index. SllzHeader SLLZ compressed file header."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Types.ParDirectoryInfo.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Types.ParDirectoryInfo.html",
    "title": "Class ParDirectoryInfo | Translation Framework v3",
    "keywords": "Class ParDirectoryInfo Par directory info. Inheritance Object ParDirectoryInfo Namespace : TF3.YarhlPlugin.YakuzaCommon.Types Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class ParDirectoryInfo : object Properties | Improve this Doc View Source FileCount Gets or sets the number of files inside this directory (not in subdirectories). Declaration public uint FileCount { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source FileStartIndex Gets or sets the index of the first file. Declaration public uint FileStartIndex { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source RawAttributes Gets or sets the attributes of the directory. Declaration public uint RawAttributes { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source SubdirectoryCount Gets or sets the number of subdirectories inside this directory. Declaration public uint SubdirectoryCount { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source SubdirectoryStartIndex Gets or sets the index of the first subdirectory. Declaration public uint SubdirectoryStartIndex { get; set; } Property Value Type Description UInt32"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Types.ParFileInfo.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Types.ParFileInfo.html",
    "title": "Class ParFileInfo | Translation Framework v3",
    "keywords": "Class ParFileInfo Par file info. Inheritance Object ParFileInfo Namespace : TF3.YarhlPlugin.YakuzaCommon.Types Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class ParFileInfo : object Properties | Improve this Doc View Source CompressedSize Gets or sets the compressed file size. Declaration public uint CompressedSize { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source DataOffset Gets or sets the offset of the data inside the PAR archive (lower part). Declaration public uint DataOffset { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source ExtendedOffset Gets or sets the offset of the data inside the PAR archive (higher part). Declaration public uint ExtendedOffset { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source Flags Gets or sets the file flags. Declaration public uint Flags { get; set; } Property Value Type Description UInt32 Remarks For now, only 0x80000000 (IsCompressed). | Improve this Doc View Source OriginalSize Gets or sets the original file size. Declaration public uint OriginalSize { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source RawAttributes Gets or sets the file attributes. Declaration public uint RawAttributes { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source Timestamp Gets or sets the file timestamp. Declaration public ulong Timestamp { get; set; } Property Value Type Description UInt64 Remarks Number of seconds from 1970/01/01. Methods | Improve this Doc View Source IsCompressed() Check if file is compressed. Declaration public bool IsCompressed() Returns Type Description Boolean True if the file is compressed."
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Types.ParIndex.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Types.ParIndex.html",
    "title": "Class ParIndex | Translation Framework v3",
    "keywords": "Class ParIndex Par archive index. Inheritance Object ParIndex Namespace : TF3.YarhlPlugin.YakuzaCommon.Types Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class ParIndex : object Properties | Improve this Doc View Source DirectoryCount Gets or sets the number of directories inside the archive. Declaration public uint DirectoryCount { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source DirectoryStartOffset Gets or sets the file offset of the directory info. Declaration public uint DirectoryStartOffset { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source FileCount Gets or sets the number of files inside the archive. Declaration public uint FileCount { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source FileStartOffset Gets or sets the file offset of the file info. Declaration public uint FileStartOffset { get; set; } Property Value Type Description UInt32"
  },
  "api/TF3.YarhlPlugin.YakuzaCommon.Types.SllzHeader.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaCommon.Types.SllzHeader.html",
    "title": "Class SllzHeader | Translation Framework v3",
    "keywords": "Class SllzHeader SLLZ compressed file header. Inheritance Object SllzHeader Namespace : TF3.YarhlPlugin.YakuzaCommon.Types Assembly : TF3.YarhlPlugin.YakuzaCommon.dll Syntax public class SllzHeader : object Properties | Improve this Doc View Source CompressedSize Gets or sets the compressed file size. Includes the header size. Declaration public uint CompressedSize { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source CompressionType Gets or sets the compressor type. Declaration public CompressionType CompressionType { get; set; } Property Value Type Description CompressionType | Improve this Doc View Source Endianness Gets or sets the file endianness. Declaration public Endianness Endianness { get; set; } Property Value Type Description Endianness | Improve this Doc View Source HeaderSize Gets or sets the header size. Declaration public ushort HeaderSize { get; set; } Property Value Type Description UInt16 | Improve this Doc View Source Magic Gets or sets the file magic number: \"SLLZ\". Declaration public string Magic { get; set; } Property Value Type Description String | Improve this Doc View Source OriginalSize Gets or sets the original file size. Declaration public uint OriginalSize { get; set; } Property Value Type Description UInt32"
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.ExtractStrings.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.ExtractStrings.html",
    "title": "Class ExtractStrings | Translation Framework v3",
    "keywords": "Class ExtractStrings Extracts Yakuza Kiwami 2 ARMP translatable strings to a Po file. Inheritance Object ExtractStrings Implements IInitializer < PoHeader > Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class ExtractStrings : IConverter<ArmpTable, Po>, IInitializer<PoHeader> Methods | Improve this Doc View Source Convert(ArmpTable) Extracts strings to a Po file. Declaration public Po Convert(ArmpTable source) Parameters Type Name Description ArmpTable source Input format. Returns Type Description Po The po file. | Improve this Doc View Source Initialize(PoHeader) Converter initializer. Declaration public void Initialize(PoHeader parameters) Parameters Type Name Description PoHeader parameters Header to use in created Po elements. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.FromXlsx.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.FromXlsx.html",
    "title": "Class FromXlsx | Translation Framework v3",
    "keywords": "Class FromXlsx Converts a XLSX into Yakuza Kiwami 2 ARMP file. Inheritance Object FromXlsx Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class FromXlsx : IConverter<BinaryFormat, ArmpTable> Methods | Improve this Doc View Source Convert(BinaryFormat) Converts a Armp into a Excel binary. Declaration public ArmpTable Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Input format. Returns Type Description ArmpTable The xlsx format."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp | Translation Framework v3",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp Classes ExtractStrings Extracts Yakuza Kiwami 2 ARMP translatable strings to a Po file. FromXlsx Converts a XLSX into Yakuza Kiwami 2 ARMP file. Reader Deserializes ARMP files. ToXlsx Converts Yakuza Kiwami 2 ARMP files to XLSX. Translate Inserts strings from Po file to an Armp table. Writer Serializes Yakuza Kiwami 2 ARMP files."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.Reader.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.Reader.html",
    "title": "Class Reader | Translation Framework v3",
    "keywords": "Class Reader Deserializes ARMP files. Inheritance Object Reader Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class Reader : IConverter<BinaryFormat, ArmpTable> Methods | Improve this Doc View Source Convert(BinaryFormat) Converts a BinaryFormat into a Armp. Declaration public ArmpTable Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Input format. Returns Type Description ArmpTable The Armp format."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.ToXlsx.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.ToXlsx.html",
    "title": "Class ToXlsx | Translation Framework v3",
    "keywords": "Class ToXlsx Converts Yakuza Kiwami 2 ARMP files to XLSX. Inheritance Object ToXlsx Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class ToXlsx : IConverter<ArmpTable, BinaryFormat> Methods | Improve this Doc View Source Convert(ArmpTable) Converts a Armp into a Excel binary. Declaration public BinaryFormat Convert(ArmpTable source) Parameters Type Name Description ArmpTable source Input format. Returns Type Description BinaryFormat The xlsx format."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.Translate.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.Translate.html",
    "title": "Class Translate | Translation Framework v3",
    "keywords": "Class Translate Inserts strings from Po file to an Armp table. Inheritance Object Translate Implements IInitializer < Po > Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class Translate : IConverter<ArmpTable, ArmpTable>, IInitializer<Po> Methods | Improve this Doc View Source Convert(ArmpTable) Inserts the translated strings from Po file in a Armp table. Declaration public ArmpTable Convert(ArmpTable source) Parameters Type Name Description ArmpTable source Original Armp. Returns Type Description ArmpTable Translated Armp. | Improve this Doc View Source Initialize(Po) Converter initializer. Declaration public void Initialize(Po parameters) Parameters Type Name Description Po parameters Po with translation. Remarks Initialization is mandatory. Implements IInitializer<>"
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.Writer.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp.Writer.html",
    "title": "Class Writer | Translation Framework v3",
    "keywords": "Class Writer Serializes Yakuza Kiwami 2 ARMP files. Inheritance Object Writer Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Converters.Armp Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class Writer : IConverter<ArmpTable, BinaryFormat> Methods | Improve this Doc View Source Convert(ArmpTable) Converts an Armp into a Binary Format. Declaration public BinaryFormat Convert(ArmpTable source) Parameters Type Name Description ArmpTable source Input format. Returns Type Description BinaryFormat The binary format."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.BinaryPoSplitter.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.BinaryPoSplitter.html",
    "title": "Class BinaryPoSplitter | Translation Framework v3",
    "keywords": "Class BinaryPoSplitter Po files splitter. Inheritance Object BinaryPoSplitter Namespace : Po Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class BinaryPoSplitter : IConverter<BinaryFormat, NodeContainerFormat> Methods | Improve this Doc View Source Convert(BinaryFormat) Splits a Po file (BinaryFormat) in smaller parts. Declaration public NodeContainerFormat Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source Original Po file. Returns Type Description NodeContainerFormat A container with the smaller parts."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po | Translation Framework v3",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po Classes BinaryPoSplitter Po files splitter. Merger Po files merger. Splitter Po files splitter."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.Merger.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.Merger.html",
    "title": "Class Merger | Translation Framework v3",
    "keywords": "Class Merger Po files merger. Inheritance Object Merger Namespace : Po Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class Merger : IConverter<NodeContainerFormat, Yarhl.Media.Text.Po> Methods | Improve this Doc View Source Convert(NodeContainerFormat) Merges all parts (BinaryFormat) in a Po file. Declaration public Yarhl.Media.Text.Po Convert(NodeContainerFormat source) Parameters Type Name Description NodeContainerFormat source Po parts. Returns Type Description Yarhl.Media.Text.Po The merged Po."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.Splitter.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Converters.Po.Splitter.html",
    "title": "Class Splitter | Translation Framework v3",
    "keywords": "Class Splitter Po files splitter. Inheritance Object Splitter Namespace : Po Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class Splitter : IConverter<Yarhl.Media.Text.Po, NodeContainerFormat> Methods | Improve this Doc View Source Convert(Yarhl.Media.Text.Po) Splits a Po file in smaller parts. Declaration public NodeContainerFormat Convert(Yarhl.Media.Text.Po source) Parameters Type Name Description Yarhl.Media.Text.Po source Original Po file. Returns Type Description NodeContainerFormat A container with the smaller parts."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Enums.Endianness.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Enums.Endianness.html",
    "title": "Enum Endianness | Translation Framework v3",
    "keywords": "Enum Endianness Endianness (byte order). Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Enums Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public enum Endianness : int Fields Name Description BigEndian Big endian LittleEndian Little endian"
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Enums.FieldType.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Enums.FieldType.html",
    "title": "Enum FieldType | Translation Framework v3",
    "keywords": "Enum FieldType Possible field types in ARMP files. Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Enums Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public enum FieldType : int Fields Name Description Boolean Boolean. Float16 Floating-point number (16 bits). Float32 Floating-point number (32 bits). Float64 Floating-point number (64 bits). Int16 Signed integer (16 bits). Int32 Signed integer (32 bits). Int64 Signed integer (64 bits). Int8 Signed integer (8 bits). String String. Table Table. UInt16 Unsigned integer (16 bits). UInt32 Unsigned integer (32 bits). UInt64 Unsigned integer (64 bits). UInt8 Unsigned integer (8 bits). Unused Unused field."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Enums.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Enums.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Enums | Translation Framework v3",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Enums Enums Endianness Endianness (byte order). FieldType Possible field types in ARMP files."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Formats.ArmpTable.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Formats.ArmpTable.html",
    "title": "Class ArmpTable | Translation Framework v3",
    "keywords": "Class ArmpTable Dragon Engine ARMP table. Inheritance Object ArmpTable Implements IEquatable < ArmpTable > Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Formats Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public sealed class ArmpTable : IFormat, IEquatable<ArmpTable> Constructors | Improve this Doc View Source ArmpTable(Int32, Byte, Int32, Boolean, Int32, Boolean, Int32) Initializes a new instance of the ArmpTable class. Declaration public ArmpTable(int id, byte flags, int recordCount, bool recordInvalid, int fieldCount, bool fieldInvalid, int valueStringCount) Parameters Type Name Description Int32 id Table id. Byte flags Table flags. Int32 recordCount Record count. Boolean recordInvalid Record invalid. Int32 fieldCount Field count. Boolean fieldInvalid Field invalid. Int32 valueStringCount Value strings count. | Improve this Doc View Source ArmpTable(ArmpTableHeader) Initializes a new instance of the ArmpTable class. Declaration public ArmpTable(ArmpTableHeader header) Parameters Type Name Description ArmpTableHeader header Table info. Properties | Improve this Doc View Source EmptyValues Gets or sets the empty values matrix. Declaration public bool[][] EmptyValues { get; set; } Property Value Type Description Boolean [][] | Improve this Doc View Source FieldCount Gets the number of fields. Declaration public int FieldCount { get; } Property Value Type Description Int32 | Improve this Doc View Source FieldExistence Gets or sets the field existence info. Declaration public bool[] FieldExistence { get; set; } Property Value Type Description Boolean [] | Improve this Doc View Source FieldIds Gets or sets the field IDs. Declaration public string[] FieldIds { get; set; } Property Value Type Description String [] | Improve this Doc View Source FieldInfo Gets or sets the field info. Declaration public byte[] FieldInfo { get; set; } Property Value Type Description Byte [] | Improve this Doc View Source FieldInvalid Gets a value indicating whether the table fields has invalid values. Declaration public bool FieldInvalid { get; } Property Value Type Description Boolean | Improve this Doc View Source FieldOrder Gets or sets the field order. Declaration public int[] FieldOrder { get; set; } Property Value Type Description Int32 [] | Improve this Doc View Source FieldTypes Gets or sets the field type info. Declaration public FieldType[] FieldTypes { get; set; } Property Value Type Description FieldType [] | Improve this Doc View Source Flags Gets the table flags. Declaration public byte Flags { get; } Property Value Type Description Byte | Improve this Doc View Source GameVarFieldType Gets or sets the game var field type. Declaration public int[] GameVarFieldType { get; set; } Property Value Type Description Int32 [] | Improve this Doc View Source Id Gets the table id. Declaration public int Id { get; } Property Value Type Description Int32 | Improve this Doc View Source Indexer Gets or sets the table indexer. Declaration public ArmpTable Indexer { get; set; } Property Value Type Description ArmpTable | Improve this Doc View Source RawRecordMemberInfo Gets or sets the raw record member info. Declaration public FieldType[] RawRecordMemberInfo { get; set; } Property Value Type Description FieldType [] | Improve this Doc View Source RecordCount Gets the number of records. Declaration public int RecordCount { get; } Property Value Type Description Int32 | Improve this Doc View Source RecordExistence Gets or sets the record existence info. Declaration public bool[] RecordExistence { get; set; } Property Value Type Description Boolean [] | Improve this Doc View Source RecordIds Gets or sets the record IDs. Declaration public string[] RecordIds { get; set; } Property Value Type Description String [] | Improve this Doc View Source RecordInvalid Gets a value indicating whether the table records has invalid values. Declaration public bool RecordInvalid { get; } Property Value Type Description Boolean | Improve this Doc View Source RecordOrder Gets or sets the record order. Declaration public int[] RecordOrder { get; set; } Property Value Type Description Int32 [] | Improve this Doc View Source Values Gets or sets the values matrix. Declaration public object[][] Values { get; set; } Property Value Type Description Object [][] | Improve this Doc View Source ValueStringCount Gets the number of value strings. Declaration public int ValueStringCount { get; } Property Value Type Description Int32 | Improve this Doc View Source ValueStrings Gets or sets the value strings. Declaration public string[] ValueStrings { get; set; } Property Value Type Description String [] Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean | Improve this Doc View Source Equals(ArmpTable) Declaration public bool Equals(ArmpTable other) Parameters Type Name Description ArmpTable other Returns Type Description Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Implements IEquatable<>"
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Formats.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Formats.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Formats | Translation Framework v3",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Formats Classes ArmpTable Dragon Engine ARMP table."
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Types.ArmpTableHeader.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Types.ArmpTableHeader.html",
    "title": "Class ArmpTableHeader | Translation Framework v3",
    "keywords": "Class ArmpTableHeader ARMP table header. Inheritance Object ArmpTableHeader Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Types Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class ArmpTableHeader : object Properties | Improve this Doc View Source EmptyValuesPointer Gets or sets the pointer to the table of empty values. Declaration public int EmptyValuesPointer { get; set; } Property Value Type Description Int32 Remarks Pointer to pointer. | Improve this Doc View Source FieldCount Gets or sets the number of fields (columns) included in the table. Declaration public int FieldCount { get; set; } Property Value Type Description Int32 | Improve this Doc View Source FieldExistencePointer Gets or sets the pointer to the field existence (validity) bits. Declaration public int FieldExistencePointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source FieldIdPointer Gets or sets the pointer to the field ids table. Declaration public int FieldIdPointer { get; set; } Property Value Type Description Int32 Remarks Pointer to pointer. | Improve this Doc View Source FieldInfoPointer Gets or sets the pointer to the field info list. Declaration public int FieldInfoPointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source FieldInvalid Gets or sets a value indicating whether the fields are invalid (??). Declaration public bool FieldInvalid { get; set; } Property Value Type Description Boolean | Improve this Doc View Source FieldOrderPointer Gets or sets the pointer to the field order list. Declaration public int FieldOrderPointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source FieldTypePointer Gets or sets the pointer to the field types list. Declaration public int FieldTypePointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Flags Gets or sets the flags. Declaration public byte Flags { get; set; } Property Value Type Description Byte | Improve this Doc View Source GameVarFieldTypePointer Gets or sets the pointer to the game variable field list. Declaration public int GameVarFieldTypePointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Id Gets or sets the id. Declaration public int Id { get; set; } Property Value Type Description Int32 | Improve this Doc View Source IndexerPointer Gets or sets the pointer to the indexer (??). Declaration public int IndexerPointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source RawRecordMemberInfoPointer Gets or sets the pointer to the record member info (type) list. Declaration public int RawRecordMemberInfoPointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source RecordCount Gets or sets the number of records (rows) included in the table. Declaration public int RecordCount { get; set; } Property Value Type Description Int32 | Improve this Doc View Source RecordExistencePointer Gets or sets the pointer to the record existence (validity) bits. Declaration public int RecordExistencePointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source RecordIdPointer Gets or sets the pointer to the record ids table. Declaration public int RecordIdPointer { get; set; } Property Value Type Description Int32 Remarks Pointer to pointer. | Improve this Doc View Source RecordInvalid Gets or sets a value indicating whether the records are invalid (??). Declaration public bool RecordInvalid { get; set; } Property Value Type Description Boolean | Improve this Doc View Source RecordOrderPointer Gets or sets the pointer to the record order list. Declaration public int RecordOrderPointer { get; set; } Property Value Type Description Int32 | Improve this Doc View Source ValuesPointer Gets or sets the pointer to the values (record content) table. Declaration public int ValuesPointer { get; set; } Property Value Type Description Int32 Remarks Pointer to pointer. | Improve this Doc View Source ValueStringCount Gets or sets the number of value strings included in the table. Declaration public int ValueStringCount { get; set; } Property Value Type Description Int32 | Improve this Doc View Source ValueStringPointer Gets or sets the pointer to value strings table. Declaration public int ValueStringPointer { get; set; } Property Value Type Description Int32 Remarks Pointer to pointer. Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String"
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Types.FileHeader.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Types.FileHeader.html",
    "title": "Class FileHeader | Translation Framework v3",
    "keywords": "Class FileHeader Archive header. Inheritance Object FileHeader Namespace : TF3.YarhlPlugin.YakuzaKiwami2.Types Assembly : TF3.YarhlPlugin.YakuzaKiwami2.dll Syntax public class FileHeader : object Properties | Improve this Doc View Source Endianness Gets or sets the file endianness. Declaration public Endianness Endianness { get; set; } Property Value Type Description Endianness | Improve this Doc View Source Magic Gets or sets the file magic number. Declaration public string Magic { get; set; } Property Value Type Description String | Improve this Doc View Source PlatformId Gets or sets the platform id value. Declaration public byte PlatformId { get; set; } Property Value Type Description Byte | Improve this Doc View Source Relocated Gets or sets the relocated byte. Declaration public byte Relocated { get; set; } Property Value Type Description Byte | Improve this Doc View Source Size Gets or sets the data size. In newer versions it is always 0. Declaration public uint Size { get; set; } Property Value Type Description UInt32 | Improve this Doc View Source SizeExtended Gets or sets the size extended byte. Declaration public byte SizeExtended { get; set; } Property Value Type Description Byte | Improve this Doc View Source Version Gets or sets the version value. Declaration public uint Version { get; set; } Property Value Type Description UInt32"
  },
  "api/TF3.YarhlPlugin.YakuzaKiwami2.Types.html": {
    "href": "api/TF3.YarhlPlugin.YakuzaKiwami2.Types.html",
    "title": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Types | Translation Framework v3",
    "keywords": "Namespace TF3.YarhlPlugin.YakuzaKiwami2.Types Classes ArmpTableHeader ARMP table header. FileHeader Archive header."
  },
  "CONTRIBUTING.html": {
    "href": "CONTRIBUTING.html",
    "title": "Contributing to the project | Translation Framework v3",
    "keywords": "Contributing to the project Thanks for taking the time to contribute! ✨ In this document you will find all the information you need to make sure the project continues to be the high-quality product we want to be! Reporting issues Issues When reporting a problem, be as specific as possible. Ideally, you should provide an small snippet of code that reproduces the issue. Try to provide also the following information: OS: Linux / Windows / Mac OS Runtime: .NET Framework, Mono, .NET Core Version of the product Stacktrace if any What's happening and what you expect to happen Features If you want to ask for a new feature, first make sure it hasn't been reported yet by using the search box in the issue tab. Make sure that the feature aligns with the direction of the project. Pull Request Before starting a pull request, create an issue requesting the feature you would like to see and implement. If you are fixing a bug, create also an issue to be able to track the problem. State that you would like to work on that. The team will reply to the issue as soon as possible, discussing the proposal if needed. This guarantee that later on the Pull Request we don't reject the proposal without having a discussion first and we don't waste time. In general, the process to create a pull request is: Create an issue describing the bug or feature and state you would like to work on that. The team will cheer you and/or discuss with you the issue. Fork the project. Clone your forked project and create a git branch. Make the necessary code changes in as many commits as you want. The commit message should follow this convention: :emoji: Short description #IssueID Long description if needed. Create a pull request. After reviewing your changes and making any new commits if needed, the team will approve and merge it. For a complete list of emoji description see this repository . Code Guidelines We follow the DotNet Runtime coding style . File headers ✔️ DO put the license in the file header with this format: // // <FileName>.cs // // Author: // <AuthorName> <email@example.com> // // Copyright (c) <Year> <AuthorName> // // Permission is hereby granted, free of charge, to any person obtaining a copy // of this software and associated documentation files (the \"Software\"), to deal // in the Software without restriction, including without limitation the rights // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell // copies of the Software, and to permit persons to whom the Software is // furnished to do so, subject to the following conditions: // // The above copyright notice and this permission notice shall be included in // all copies or substantial portions of the Software. // // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN // THE SOFTWARE. Usings ✔️ DO put the using inside the namespace. ✔️ DO include all the namespaces you are using. ✔️ DO use the using statement for IDisposable types."
  },
  "dev/Changelog.html": {
    "href": "dev/Changelog.html",
    "title": "vNext (December 20, 2020) | Translation Framework v3",
    "keywords": "vNext (December 20, 2020) As part of this release we had 4 issues closed. Enhancements #4 Use scripts #3 Read and write ARMP files #2 Read and write PAR archives #1 Read and Write Yakuza PAR archives"
  },
  "guides/Contributing.html": {
    "href": "guides/Contributing.html",
    "title": "Contributing to the project | Translation Framework v3",
    "keywords": "Contributing to the project Thanks for taking the time to contribute! ✨ In this document you will find all the information you need to make sure the project continues to be the high-quality product we want to be! Reporting issues Issues When reporting a problem, be as specific as possible. Ideally, you should provide an small snippet of code that reproduces the issue. Try to provide also the following information: OS: Linux / Windows / Mac OS Runtime: .NET Framework, Mono, .NET Core Version of the product Stacktrace if any What's happening and what you expect to happen Features If you want to ask for a new feature, first make sure it hasn't been reported yet by using the search box in the issue tab. Make sure that the feature aligns with the direction of the project. Pull Request Before starting a pull request, create an issue requesting the feature you would like to see and implement. If you are fixing a bug, create also an issue to be able to track the problem. State that you would like to work on that. The team will reply to the issue as soon as possible, discussing the proposal if needed. This guarantee that later on the Pull Request we don't reject the proposal without having a discussion first and we don't waste time. In general, the process to create a pull request is: Create an issue describing the bug or feature and state you would like to work on that. The team will cheer you and/or discuss with you the issue. Fork the project. Clone your forked project and create a git branch. Make the necessary code changes in as many commits as you want. The commit message should follow this convention: :emoji: Short description #IssueID Long description if needed. Create a pull request. After reviewing your changes and making any new commits if needed, the team will approve and merge it. For a complete list of emoji description see this repository . Code Guidelines We follow the DotNet Runtime coding style . File headers ✔️ DO put the license in the file header with this format: // // <FileName>.cs // // Author: // <AuthorName> <email@example.com> // // Copyright (c) <Year> <AuthorName> // // Permission is hereby granted, free of charge, to any person obtaining a copy // of this software and associated documentation files (the \"Software\"), to deal // in the Software without restriction, including without limitation the rights // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell // copies of the Software, and to permit persons to whom the Software is // furnished to do so, subject to the following conditions: // // The above copyright notice and this permission notice shall be included in // all copies or substantial portions of the Software. // // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN // THE SOFTWARE. Usings ✔️ DO put the using inside the namespace. ✔️ DO include all the namespaces you are using. ✔️ DO use the using statement for IDisposable types."
  },
  "guides/First-Steps.html": {
    "href": "guides/First-Steps.html",
    "title": "First steps | Translation Framework v3",
    "keywords": "First steps Welcome to this project!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Translation Framework v3 (Powered by Yarhl) | Translation Framework v3",
    "keywords": "Translation Framework v3 (Powered by Yarhl ) WIP - NOTHING TO SEE HERE Meanwhile, use Translation Framework v2 Credits Thanks to Pleonex for Yarhl and PleOps.Cake . Icon by Papirus Development Team ."
  },
  "README.html": {
    "href": "README.html",
    "title": "Translation Framework v3 (Powered by Yarhl) | Translation Framework v3",
    "keywords": "Translation Framework v3 (Powered by Yarhl ) WIP - NOTHING TO SEE HERE Meanwhile, use Translation Framework v2 Credits Thanks to Pleonex for Yarhl and PleOps.Cake . Icon by Papirus Development Team ."
  }
}