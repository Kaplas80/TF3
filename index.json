{
  "api/TF3.Core.Converters.BinaryPatch.Apply.html": {
    "href": "api/TF3.Core.Converters.BinaryPatch.Apply.html",
    "title": "Class Apply | Translation Framework v3",
    "keywords": "Class Apply Binary patch applier. Inheritance Object Apply Implements Yarhl.FileFormat.IConverter < Yarhl.IO.BinaryFormat , Yarhl.IO.BinaryFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < BinaryPatch > Namespace : TF3.Core.Converters.BinaryPatch Assembly : TF3.Core.dll Syntax public class Apply : Object Constructors Apply() Declaration public Apply() Methods Convert(BinaryFormat) Applies a binary patch to a file. Declaration public BinaryFormat Convert(BinaryFormat source) Parameters Type Name Description Yarhl.IO.BinaryFormat source The original BinaryFormat. Returns Type Description Yarhl.IO.BinaryFormat The BinaryFormat with the applied patch. Initialize(BinaryPatch) Converter initializer. Declaration public void Initialize(BinaryPatch parameters) Parameters Type Name Description BinaryPatch parameters Patch info. Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BinaryPatch.html": {
    "href": "api/TF3.Core.Converters.BinaryPatch.html",
    "title": "Namespace TF3.Core.Converters.BinaryPatch | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Converters.BinaryPatch Classes Apply Binary patch applier. Reader Patch file reader."
  },
  "api/TF3.Core.Converters.BinaryPatch.Reader.html": {
    "href": "api/TF3.Core.Converters.BinaryPatch.Reader.html",
    "title": "Class Reader | Translation Framework v3",
    "keywords": "Class Reader Patch file reader. Inheritance Object Reader Implements Yarhl.FileFormat.IConverter < Yarhl.IO.BinaryFormat , BinaryPatch > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Int64 > Namespace : TF3.Core.Converters.BinaryPatch Assembly : TF3.Core.dll Syntax public class Reader : Object Constructors Reader() Declaration public Reader() Methods Convert(BinaryFormat) Reads a patch file. Declaration public BinaryPatch Convert(BinaryFormat source) Parameters Type Name Description Yarhl.IO.BinaryFormat source The patch file. Returns Type Description BinaryPatch The patch. Initialize(Int64) Initialize the reader. Declaration public void Initialize(long parameters) Parameters Type Name Description Int64 parameters File Raw Offset. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Extractor.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Extractor.html",
    "title": "Class Extractor | Translation Framework v3",
    "keywords": "Class Extractor Bitmap to PNG converter. Inheritance Object Extractor Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , Yarhl.IO.BinaryFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < ImageExtractorParameters > Namespace : TF3.Core.Converters.BitmapImage Assembly : TF3.Core.dll Syntax public class Extractor : Object Constructors Extractor() Declaration public Extractor() Methods Convert(BitmapFileFormat) Converts a Bitmap file to a known format. Declaration public BinaryFormat Convert(BitmapFileFormat source) Parameters Type Name Description BitmapFileFormat source The Bitmap file. Returns Type Description Yarhl.IO.BinaryFormat The output file. Initialize(ImageExtractorParameters) Initializes the extractor parameters. Declaration public void Initialize(ImageExtractorParameters parameters) Parameters Type Name Description ImageExtractorParameters parameters Extractor configuration. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.html",
    "title": "Namespace TF3.Core.Converters.BitmapImage | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Converters.BitmapImage Classes Extractor Bitmap to PNG converter. ImageParameters Parameters for Bitmap reader. Reader Bitmap file reader. Writer Bitmap file writer."
  },
  "api/TF3.Core.Converters.BitmapImage.ImageParameters.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.ImageParameters.html",
    "title": "Class ImageParameters | Translation Framework v3",
    "keywords": "Class ImageParameters Parameters for Bitmap reader. Inheritance Object ImageParameters Namespace : TF3.Core.Converters.BitmapImage Assembly : TF3.Core.dll Syntax public class ImageParameters : Object Constructors ImageParameters() Initializes a new instance of the ImageParameters class. Declaration public ImageParameters() Properties ImageHeight Gets or sets a value indicating the image height (in pixels). Declaration public int ImageHeight { get; set; } Property Value Type Description Int32 ImageWidth Gets or sets a value indicating the image width (in pixels). Declaration public int ImageWidth { get; set; } Property Value Type Description Int32 PixelFormat Gets or sets a value indicating the image pixel format. Declaration public BitmapPixelFormat PixelFormat { get; set; } Property Value Type Description BitmapPixelFormat"
  },
  "api/TF3.Core.Converters.BitmapImage.Reader.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Reader.html",
    "title": "Class Reader | Translation Framework v3",
    "keywords": "Class Reader Bitmap file reader. Inheritance Object Reader Implements Yarhl.FileFormat.IConverter < Yarhl.IO.BinaryFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < ImageParameters > Namespace : TF3.Core.Converters.BitmapImage Assembly : TF3.Core.dll Syntax public class Reader : Object Constructors Reader() Declaration public Reader() Methods Convert(BinaryFormat) Reads a bitmap file. Declaration public BitmapFileFormat Convert(BinaryFormat source) Parameters Type Name Description Yarhl.IO.BinaryFormat source The image file. Returns Type Description BitmapFileFormat The image format. Initialize(ImageParameters) Initializes the reader parameters. Declaration public void Initialize(ImageParameters parameters) Parameters Type Name Description ImageParameters parameters Reader configuration. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.A8Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.A8Replace.html",
    "title": "Class A8Replace | Translation Framework v3",
    "keywords": "Class A8Replace Replaces the original image with a new one. Inheritance Object AbstractReplace A8Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class A8Replace : AbstractReplace Constructors A8Replace() Declaration public A8Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Abgr32Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Abgr32Replace.html",
    "title": "Class Abgr32Replace | Translation Framework v3",
    "keywords": "Class Abgr32Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Abgr32Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Abgr32Replace : AbstractReplace Constructors Abgr32Replace() Declaration public Abgr32Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.AbstractReplace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.AbstractReplace.html",
    "title": "Class AbstractReplace | Translation Framework v3",
    "keywords": "Class AbstractReplace Replaces the original image with a new one. Inheritance Object AbstractReplace A8Replace Abgr32Replace Argb32Replace Bgr24Replace Bgr565Replace Bgra32Replace Bgra4444Replace Bgra5551Replace Byte4Replace HalfSingleReplace HalfVector2Replace HalfVector4Replace L16Replace L8Replace La16Replace La32Replace NormalizedByte2Replace NormalizedByte4Replace NormalizedShort2Replace NormalizedShort4Replace Rg32Replace Rgb24Replace Rgb48Replace Rgba1010102Replace Rgba32Replace Rgba64Replace RgbaVectorReplace Short2Replace Short4Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public abstract class AbstractReplace : Object Constructors AbstractReplace() Declaration protected AbstractReplace() Methods Convert(BitmapFileFormat) Replaces the original bitmap with a new one. Declaration public BitmapFileFormat Convert(BitmapFileFormat source) Parameters Type Name Description BitmapFileFormat source Original bitmap. Returns Type Description BitmapFileFormat New bitmap. Initialize(BinaryFormat) Converter initializer. Declaration public abstract void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Remarks Initialization is mandatory. SetNewImage(Image) Sets the new image to insert. Declaration protected void SetNewImage(Image value) Parameters Type Name Description SixLabors.ImageSharp.Image value New image. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Argb32Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Argb32Replace.html",
    "title": "Class Argb32Replace | Translation Framework v3",
    "keywords": "Class Argb32Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Argb32Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Argb32Replace : AbstractReplace Constructors Argb32Replace() Declaration public Argb32Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Bgr24Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Bgr24Replace.html",
    "title": "Class Bgr24Replace | Translation Framework v3",
    "keywords": "Class Bgr24Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Bgr24Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Bgr24Replace : AbstractReplace Constructors Bgr24Replace() Declaration public Bgr24Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Bgr565Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Bgr565Replace.html",
    "title": "Class Bgr565Replace | Translation Framework v3",
    "keywords": "Class Bgr565Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Bgr565Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Bgr565Replace : AbstractReplace Constructors Bgr565Replace() Declaration public Bgr565Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Bgra32Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Bgra32Replace.html",
    "title": "Class Bgra32Replace | Translation Framework v3",
    "keywords": "Class Bgra32Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Bgra32Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Bgra32Replace : AbstractReplace Constructors Bgra32Replace() Declaration public Bgra32Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Bgra4444Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Bgra4444Replace.html",
    "title": "Class Bgra4444Replace | Translation Framework v3",
    "keywords": "Class Bgra4444Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Bgra4444Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Bgra4444Replace : AbstractReplace Constructors Bgra4444Replace() Declaration public Bgra4444Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Bgra5551Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Bgra5551Replace.html",
    "title": "Class Bgra5551Replace | Translation Framework v3",
    "keywords": "Class Bgra5551Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Bgra5551Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Bgra5551Replace : AbstractReplace Constructors Bgra5551Replace() Declaration public Bgra5551Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Byte4Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Byte4Replace.html",
    "title": "Class Byte4Replace | Translation Framework v3",
    "keywords": "Class Byte4Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Byte4Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Byte4Replace : AbstractReplace Constructors Byte4Replace() Declaration public Byte4Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.HalfSingleReplace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.HalfSingleReplace.html",
    "title": "Class HalfSingleReplace | Translation Framework v3",
    "keywords": "Class HalfSingleReplace Replaces the original image with a new one. Inheritance Object AbstractReplace HalfSingleReplace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class HalfSingleReplace : AbstractReplace Constructors HalfSingleReplace() Declaration public HalfSingleReplace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.HalfVector2Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.HalfVector2Replace.html",
    "title": "Class HalfVector2Replace | Translation Framework v3",
    "keywords": "Class HalfVector2Replace Replaces the original image with a new one. Inheritance Object AbstractReplace HalfVector2Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class HalfVector2Replace : AbstractReplace Constructors HalfVector2Replace() Declaration public HalfVector2Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.HalfVector4Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.HalfVector4Replace.html",
    "title": "Class HalfVector4Replace | Translation Framework v3",
    "keywords": "Class HalfVector4Replace Replaces the original image with a new one. Inheritance Object AbstractReplace HalfVector4Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class HalfVector4Replace : AbstractReplace Constructors HalfVector4Replace() Declaration public HalfVector4Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.html",
    "title": "Namespace TF3.Core.Converters.BitmapImage.Replace | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Converters.BitmapImage.Replace Classes A8Replace Replaces the original image with a new one. Abgr32Replace Replaces the original image with a new one. AbstractReplace Replaces the original image with a new one. Argb32Replace Replaces the original image with a new one. Bgr24Replace Replaces the original image with a new one. Bgr565Replace Replaces the original image with a new one. Bgra32Replace Replaces the original image with a new one. Bgra4444Replace Replaces the original image with a new one. Bgra5551Replace Replaces the original image with a new one. Byte4Replace Replaces the original image with a new one. HalfSingleReplace Replaces the original image with a new one. HalfVector2Replace Replaces the original image with a new one. HalfVector4Replace Replaces the original image with a new one. L16Replace Replaces the original image with a new one. L8Replace Replaces the original image with a new one. La16Replace Replaces the original image with a new one. La32Replace Replaces the original image with a new one. NormalizedByte2Replace Replaces the original image with a new one. NormalizedByte4Replace Replaces the original image with a new one. NormalizedShort2Replace Replaces the original image with a new one. NormalizedShort4Replace Replaces the original image with a new one. Rg32Replace Replaces the original image with a new one. Rgb24Replace Replaces the original image with a new one. Rgb48Replace Replaces the original image with a new one. Rgba1010102Replace Replaces the original image with a new one. Rgba32Replace Replaces the original image with a new one. Rgba64Replace Replaces the original image with a new one. RgbaVectorReplace Replaces the original image with a new one. Short2Replace Replaces the original image with a new one. Short4Replace Replaces the original image with a new one."
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.L16Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.L16Replace.html",
    "title": "Class L16Replace | Translation Framework v3",
    "keywords": "Class L16Replace Replaces the original image with a new one. Inheritance Object AbstractReplace L16Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class L16Replace : AbstractReplace Constructors L16Replace() Declaration public L16Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.L8Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.L8Replace.html",
    "title": "Class L8Replace | Translation Framework v3",
    "keywords": "Class L8Replace Replaces the original image with a new one. Inheritance Object AbstractReplace L8Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class L8Replace : AbstractReplace Constructors L8Replace() Declaration public L8Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.La16Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.La16Replace.html",
    "title": "Class La16Replace | Translation Framework v3",
    "keywords": "Class La16Replace Replaces the original image with a new one. Inheritance Object AbstractReplace La16Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class La16Replace : AbstractReplace Constructors La16Replace() Declaration public La16Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.La32Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.La32Replace.html",
    "title": "Class La32Replace | Translation Framework v3",
    "keywords": "Class La32Replace Replaces the original image with a new one. Inheritance Object AbstractReplace La32Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class La32Replace : AbstractReplace Constructors La32Replace() Declaration public La32Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.NormalizedByte2Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.NormalizedByte2Replace.html",
    "title": "Class NormalizedByte2Replace | Translation Framework v3",
    "keywords": "Class NormalizedByte2Replace Replaces the original image with a new one. Inheritance Object AbstractReplace NormalizedByte2Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class NormalizedByte2Replace : AbstractReplace Constructors NormalizedByte2Replace() Declaration public NormalizedByte2Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.NormalizedByte4Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.NormalizedByte4Replace.html",
    "title": "Class NormalizedByte4Replace | Translation Framework v3",
    "keywords": "Class NormalizedByte4Replace Replaces the original image with a new one. Inheritance Object AbstractReplace NormalizedByte4Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class NormalizedByte4Replace : AbstractReplace Constructors NormalizedByte4Replace() Declaration public NormalizedByte4Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.NormalizedShort2Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.NormalizedShort2Replace.html",
    "title": "Class NormalizedShort2Replace | Translation Framework v3",
    "keywords": "Class NormalizedShort2Replace Replaces the original image with a new one. Inheritance Object AbstractReplace NormalizedShort2Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class NormalizedShort2Replace : AbstractReplace Constructors NormalizedShort2Replace() Declaration public NormalizedShort2Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.NormalizedShort4Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.NormalizedShort4Replace.html",
    "title": "Class NormalizedShort4Replace | Translation Framework v3",
    "keywords": "Class NormalizedShort4Replace Replaces the original image with a new one. Inheritance Object AbstractReplace NormalizedShort4Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class NormalizedShort4Replace : AbstractReplace Constructors NormalizedShort4Replace() Declaration public NormalizedShort4Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Rg32Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Rg32Replace.html",
    "title": "Class Rg32Replace | Translation Framework v3",
    "keywords": "Class Rg32Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Rg32Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Rg32Replace : AbstractReplace Constructors Rg32Replace() Declaration public Rg32Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Rgb24Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Rgb24Replace.html",
    "title": "Class Rgb24Replace | Translation Framework v3",
    "keywords": "Class Rgb24Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Rgb24Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Rgb24Replace : AbstractReplace Constructors Rgb24Replace() Declaration public Rgb24Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Rgb48Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Rgb48Replace.html",
    "title": "Class Rgb48Replace | Translation Framework v3",
    "keywords": "Class Rgb48Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Rgb48Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Rgb48Replace : AbstractReplace Constructors Rgb48Replace() Declaration public Rgb48Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Rgba1010102Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Rgba1010102Replace.html",
    "title": "Class Rgba1010102Replace | Translation Framework v3",
    "keywords": "Class Rgba1010102Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Rgba1010102Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Rgba1010102Replace : AbstractReplace Constructors Rgba1010102Replace() Declaration public Rgba1010102Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Rgba32Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Rgba32Replace.html",
    "title": "Class Rgba32Replace | Translation Framework v3",
    "keywords": "Class Rgba32Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Rgba32Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Rgba32Replace : AbstractReplace Constructors Rgba32Replace() Declaration public Rgba32Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Rgba64Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Rgba64Replace.html",
    "title": "Class Rgba64Replace | Translation Framework v3",
    "keywords": "Class Rgba64Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Rgba64Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Rgba64Replace : AbstractReplace Constructors Rgba64Replace() Declaration public Rgba64Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.RgbaVectorReplace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.RgbaVectorReplace.html",
    "title": "Class RgbaVectorReplace | Translation Framework v3",
    "keywords": "Class RgbaVectorReplace Replaces the original image with a new one. Inheritance Object AbstractReplace RgbaVectorReplace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class RgbaVectorReplace : AbstractReplace Constructors RgbaVectorReplace() Declaration public RgbaVectorReplace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Short2Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Short2Replace.html",
    "title": "Class Short2Replace | Translation Framework v3",
    "keywords": "Class Short2Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Short2Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Short2Replace : AbstractReplace Constructors Short2Replace() Declaration public Short2Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Replace.Short4Replace.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Replace.Short4Replace.html",
    "title": "Class Short4Replace | Translation Framework v3",
    "keywords": "Class Short4Replace Replaces the original image with a new one. Inheritance Object AbstractReplace Short4Replace Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , BitmapFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Inherited Members AbstractReplace.Convert(BitmapFileFormat) AbstractReplace.SetNewImage(Image) Namespace : TF3.Core.Converters.BitmapImage.Replace Assembly : TF3.Core.dll Syntax public class Short4Replace : AbstractReplace Constructors Short4Replace() Declaration public Short4Replace() Methods Initialize(BinaryFormat) Converter initializer. Declaration public override void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Overrides AbstractReplace.Initialize(BinaryFormat) Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.BitmapImage.Writer.html": {
    "href": "api/TF3.Core.Converters.BitmapImage.Writer.html",
    "title": "Class Writer | Translation Framework v3",
    "keywords": "Class Writer Bitmap file writer. Inheritance Object Writer Implements Yarhl.FileFormat.IConverter < BitmapFileFormat , Yarhl.IO.BinaryFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < ImageParameters > Namespace : TF3.Core.Converters.BitmapImage Assembly : TF3.Core.dll Syntax public class Writer : Object Constructors Writer() Declaration public Writer() Methods Convert(BitmapFileFormat) Writes a Bitmap file. Declaration public BinaryFormat Convert(BitmapFileFormat source) Parameters Type Name Description BitmapFileFormat source The Bitmap format. Returns Type Description Yarhl.IO.BinaryFormat The Bitmap file. Initialize(ImageParameters) Initializes the writer parameters. Declaration public void Initialize(ImageParameters parameters) Parameters Type Name Description ImageParameters parameters Writer configuration. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.Common.html": {
    "href": "api/TF3.Core.Converters.Common.html",
    "title": "Namespace TF3.Core.Converters.Common | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Converters.Common Classes ImageExtractorParameters Parameters for Bitmap extractor."
  },
  "api/TF3.Core.Converters.Common.ImageExtractorParameters.html": {
    "href": "api/TF3.Core.Converters.Common.ImageExtractorParameters.html",
    "title": "Class ImageExtractorParameters | Translation Framework v3",
    "keywords": "Class ImageExtractorParameters Parameters for Bitmap extractor. Inheritance Object ImageExtractorParameters Namespace : TF3.Core.Converters.Common Assembly : TF3.Core.dll Syntax public class ImageExtractorParameters : Object Constructors ImageExtractorParameters() Initializes a new instance of the ImageExtractorParameters class. Declaration public ImageExtractorParameters() Properties ImageFormat Gets or sets a value indicating the image pixel format. Declaration public BitmapExtractionFormat ImageFormat { get; set; } Property Value Type Description BitmapExtractionFormat"
  },
  "api/TF3.Core.Converters.DdsImage.Extractor.html": {
    "href": "api/TF3.Core.Converters.DdsImage.Extractor.html",
    "title": "Class Extractor | Translation Framework v3",
    "keywords": "Class Extractor DDS to PNG converter. Inheritance Object Extractor Implements Yarhl.FileFormat.IConverter < DdsFileFormat , Yarhl.IO.BinaryFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < ImageExtractorParameters > Namespace : TF3.Core.Converters.DdsImage Assembly : TF3.Core.dll Syntax public class Extractor : Object Constructors Extractor() Declaration public Extractor() Methods Convert(DdsFileFormat) Converts a DDS file into PNG. Declaration public BinaryFormat Convert(DdsFileFormat source) Parameters Type Name Description DdsFileFormat source The DDS file. Returns Type Description Yarhl.IO.BinaryFormat The PNG file. Initialize(ImageExtractorParameters) Initializes the extractor parameters. Declaration public void Initialize(ImageExtractorParameters parameters) Parameters Type Name Description ImageExtractorParameters parameters Extractor configuration. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.DdsImage.html": {
    "href": "api/TF3.Core.Converters.DdsImage.html",
    "title": "Namespace TF3.Core.Converters.DdsImage | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Converters.DdsImage Classes Extractor DDS to PNG converter. Reader DDS file reader. Replace Replaces the original DDS with a new one. Writer DDS file writer."
  },
  "api/TF3.Core.Converters.DdsImage.Reader.html": {
    "href": "api/TF3.Core.Converters.DdsImage.Reader.html",
    "title": "Class Reader | Translation Framework v3",
    "keywords": "Class Reader DDS file reader. Inheritance Object Reader Implements Yarhl.FileFormat.IConverter < Yarhl.IO.BinaryFormat , DdsFileFormat > Yarhl.FileFormat.IConverter Namespace : TF3.Core.Converters.DdsImage Assembly : TF3.Core.dll Syntax public class Reader : Object Constructors Reader() Declaration public Reader() Methods Convert(BinaryFormat) Reads a DDS file. Declaration public DdsFileFormat Convert(BinaryFormat source) Parameters Type Name Description Yarhl.IO.BinaryFormat source The DDS file. Returns Type Description DdsFileFormat The DDS format. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter"
  },
  "api/TF3.Core.Converters.DdsImage.Replace.html": {
    "href": "api/TF3.Core.Converters.DdsImage.Replace.html",
    "title": "Class Replace | Translation Framework v3",
    "keywords": "Class Replace Replaces the original DDS with a new one. Inheritance Object Replace Implements Yarhl.FileFormat.IConverter < DdsFileFormat , DdsFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.IO.BinaryFormat > Namespace : TF3.Core.Converters.DdsImage Assembly : TF3.Core.dll Syntax public class Replace : Object Constructors Replace() Declaration public Replace() Methods Convert(DdsFileFormat) Replaces the original DDS with a new one. Declaration public DdsFileFormat Convert(DdsFileFormat source) Parameters Type Name Description DdsFileFormat source Original DDS. Returns Type Description DdsFileFormat New DDS. Initialize(BinaryFormat) Converter initializer. Declaration public void Initialize(BinaryFormat parameters) Parameters Type Name Description Yarhl.IO.BinaryFormat parameters New image binary. Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.DdsImage.Writer.html": {
    "href": "api/TF3.Core.Converters.DdsImage.Writer.html",
    "title": "Class Writer | Translation Framework v3",
    "keywords": "Class Writer DDS file writer. Inheritance Object Writer Implements Yarhl.FileFormat.IConverter < DdsFileFormat , Yarhl.IO.BinaryFormat > Yarhl.FileFormat.IConverter Namespace : TF3.Core.Converters.DdsImage Assembly : TF3.Core.dll Syntax public class Writer : Object Constructors Writer() Declaration public Writer() Methods Convert(DdsFileFormat) Writes a DDS file. Declaration public BinaryFormat Convert(DdsFileFormat source) Parameters Type Name Description DdsFileFormat source The DDS format. Returns Type Description Yarhl.IO.BinaryFormat The DDS file. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter"
  },
  "api/TF3.Core.Converters.FormatReplace.html": {
    "href": "api/TF3.Core.Converters.FormatReplace.html",
    "title": "Class FormatReplace | Translation Framework v3",
    "keywords": "Class FormatReplace Format replacer. Inheritance Object FormatReplace Implements Yarhl.FileFormat.IConverter < Yarhl.FileFormat.IFormat , Yarhl.FileFormat.IFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.FileFormat.IFormat > Namespace : TF3.Core.Converters Assembly : TF3.Core.dll Syntax public class FormatReplace : Object Constructors FormatReplace() Declaration public FormatReplace() Methods Convert(IFormat) Fully replace a IFormat. Declaration public IFormat Convert(IFormat source) Parameters Type Name Description Yarhl.FileFormat.IFormat source The original format. Returns Type Description Yarhl.FileFormat.IFormat The new format. Initialize(IFormat) Set the new format. Declaration public void Initialize(IFormat parameters) Parameters Type Name Description Yarhl.FileFormat.IFormat parameters The new format. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.FormatToSingleNode.html": {
    "href": "api/TF3.Core.Converters.FormatToSingleNode.html",
    "title": "Class FormatToSingleNode | Translation Framework v3",
    "keywords": "Class FormatToSingleNode Converts a IFormat to a NodeContainerFormat. Inheritance Object FormatToSingleNode Implements Yarhl.FileFormat.IConverter < Yarhl.FileFormat.IFormat , Yarhl.FileSystem.NodeContainerFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < String > Namespace : TF3.Core.Converters Assembly : TF3.Core.dll Syntax public class FormatToSingleNode : Object Constructors FormatToSingleNode() Declaration public FormatToSingleNode() Methods Convert(IFormat) Convert a format to a single node NodeContainerFormat. Declaration public NodeContainerFormat Convert(IFormat source) Parameters Type Name Description Yarhl.FileFormat.IFormat source A format. Returns Type Description Yarhl.FileSystem.NodeContainerFormat The 'single node' NodeContainerFormat. Initialize(String) Set the node name. Declaration public void Initialize(string parameters) Parameters Type Name Description String parameters Node name. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.html": {
    "href": "api/TF3.Core.Converters.html",
    "title": "Namespace TF3.Core.Converters | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Converters Classes FormatReplace Format replacer. FormatToSingleNode Converts a IFormat to a NodeContainerFormat. SingleNodeToFormat Converts a NodeContainerFormat to the format of the first children."
  },
  "api/TF3.Core.Converters.Po.html": {
    "href": "api/TF3.Core.Converters.Po.html",
    "title": "Namespace TF3.Core.Converters.Po | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Converters.Po Classes NodeContainerToPo Po files merger."
  },
  "api/TF3.Core.Converters.Po.NodeContainerToPo.html": {
    "href": "api/TF3.Core.Converters.Po.NodeContainerToPo.html",
    "title": "Class NodeContainerToPo | Translation Framework v3",
    "keywords": "Class NodeContainerToPo Po files merger. Inheritance Object NodeContainerToPo Implements Yarhl.FileFormat.IConverter < Yarhl.FileSystem.NodeContainerFormat , Yarhl.Media.Text.Po > Yarhl.FileFormat.IConverter Namespace : TF3.Core.Converters.Po Assembly : TF3.Core.dll Syntax public class NodeContainerToPo : Object Constructors NodeContainerToPo() Declaration public NodeContainerToPo() Methods Convert(NodeContainerFormat) Merges all parts (BinaryFormat) in a Po file. Declaration public Po Convert(NodeContainerFormat source) Parameters Type Name Description Yarhl.FileSystem.NodeContainerFormat source Po parts. Returns Type Description Yarhl.Media.Text.Po The merged Po. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter"
  },
  "api/TF3.Core.Converters.PortableExecutable.ExtractStrings.html": {
    "href": "api/TF3.Core.Converters.PortableExecutable.ExtractStrings.html",
    "title": "Class ExtractStrings | Translation Framework v3",
    "keywords": "Class ExtractStrings Extracts .exe translatable strings to a Po file. Inheritance Object ExtractStrings Implements Yarhl.FileFormat.IConverter < PortableExecutableFileFormat , Yarhl.Media.Text.Po > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.Media.Text.PoHeader > Namespace : TF3.Core.Converters.PortableExecutable Assembly : TF3.Core.dll Syntax public class ExtractStrings : Object Constructors ExtractStrings() Declaration public ExtractStrings() Methods Convert(PortableExecutableFileFormat) Extracts strings to a Po file. Declaration public Po Convert(PortableExecutableFileFormat source) Parameters Type Name Description PortableExecutableFileFormat source Input format. Returns Type Description Yarhl.Media.Text.Po The po file. Exceptions Type Condition ArgumentNullException Thrown if source is null. Initialize(PoHeader) Converter initializer. Declaration public void Initialize(PoHeader parameters) Parameters Type Name Description Yarhl.Media.Text.PoHeader parameters Header to use in created Po elements. ProcessString(String) Some games may need string processing before writing the Po. For example, converting from fullwidth to halfwidth or replacing some characters. Declaration protected virtual string ProcessString(string value) Parameters Type Name Description String value The original string. Returns Type Description String A processed string. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.PortableExecutable.html": {
    "href": "api/TF3.Core.Converters.PortableExecutable.html",
    "title": "Namespace TF3.Core.Converters.PortableExecutable | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Converters.PortableExecutable Classes ExtractStrings Extracts .exe translatable strings to a Po file. Reader Deserializes PE files. Translate Inserts strings from Po file to the game Portable executable. Writer Serializes PE files."
  },
  "api/TF3.Core.Converters.PortableExecutable.Reader.html": {
    "href": "api/TF3.Core.Converters.PortableExecutable.Reader.html",
    "title": "Class Reader | Translation Framework v3",
    "keywords": "Class Reader Deserializes PE files. Inheritance Object Reader Implements Yarhl.FileFormat.IConverter < Yarhl.IO.BinaryFormat , PortableExecutableFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < String > Namespace : TF3.Core.Converters.PortableExecutable Assembly : TF3.Core.dll Syntax public class Reader : Object Constructors Reader() Declaration public Reader() Methods Convert(BinaryFormat) Converts a BinaryFormat into a PEFile. Declaration public PortableExecutableFileFormat Convert(BinaryFormat source) Parameters Type Name Description Yarhl.IO.BinaryFormat source Input format. Returns Type Description PortableExecutableFileFormat The PEFile format. Exceptions Type Condition ArgumentNullException Thrown if source is null. Initialize(String) Converter initializer. Declaration public void Initialize(string filename) Parameters Type Name Description String filename Reader config. Remarks Initialization is mandatory. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.PortableExecutable.Translate.html": {
    "href": "api/TF3.Core.Converters.PortableExecutable.Translate.html",
    "title": "Class Translate | Translation Framework v3",
    "keywords": "Class Translate Inserts strings from Po file to the game Portable executable. Inheritance Object Translate Implements Yarhl.FileFormat.IConverter < PortableExecutableFileFormat , PortableExecutableFileFormat > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer < Yarhl.Media.Text.Po > Namespace : TF3.Core.Converters.PortableExecutable Assembly : TF3.Core.dll Syntax public class Translate : Object Constructors Translate() Declaration public Translate() Methods Convert(PortableExecutableFileFormat) Inserts the translated strings from Po file in a PortableExecutable file. Declaration public PortableExecutableFileFormat Convert(PortableExecutableFileFormat source) Parameters Type Name Description PortableExecutableFileFormat source Original Portable executable. Returns Type Description PortableExecutableFileFormat Translated Portable executable. Initialize(Po) Converter initializer. Declaration public void Initialize(Po parameters) Parameters Type Name Description Yarhl.Media.Text.Po parameters Po with translation. Remarks Initialization is mandatory. WriteReference(UInt32, UInt32, UInt32, PEFile, DataStream) Modifies the string references to point to the new address. Declaration protected virtual void WriteReference(uint reference, uint originalStringAddress, uint newStringAddress, PEFile peFile, DataStream peFileStream) Parameters Type Name Description UInt32 reference The reference address. UInt32 originalStringAddress The original string address. UInt32 newStringAddress The new string address. AsmResolver.PE.File.PEFile peFile The PEFile. Yarhl.IO.DataStream peFileStream The PEFile bytes. Exceptions Type Condition NotImplementedException Thrown if instruction opcode is not recognized. WriteString(PoEntry, DataWriter) Writes the translated string to the DataWriter, allowing modifications. Declaration protected virtual void WriteString(PoEntry entry, DataWriter writer) Parameters Type Name Description Yarhl.Media.Text.PoEntry entry The PoEntry with the string info. Yarhl.IO.DataWriter writer The DataWriter. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter Yarhl.FileFormat.IInitializer<>"
  },
  "api/TF3.Core.Converters.PortableExecutable.Writer.html": {
    "href": "api/TF3.Core.Converters.PortableExecutable.Writer.html",
    "title": "Class Writer | Translation Framework v3",
    "keywords": "Class Writer Serializes PE files. Inheritance Object Writer Implements Yarhl.FileFormat.IConverter < PortableExecutableFileFormat , Yarhl.IO.BinaryFormat > Yarhl.FileFormat.IConverter Namespace : TF3.Core.Converters.PortableExecutable Assembly : TF3.Core.dll Syntax public class Writer : Object Constructors Writer() Declaration public Writer() Methods Convert(PortableExecutableFileFormat) Converts a PEFile into a BinaryFormat . Declaration public BinaryFormat Convert(PortableExecutableFileFormat source) Parameters Type Name Description PortableExecutableFileFormat source Input format. Returns Type Description Yarhl.IO.BinaryFormat The BinaryFormat format. Exceptions Type Condition ArgumentNullException Thrown if source is null. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter"
  },
  "api/TF3.Core.Converters.SingleNodeToFormat.html": {
    "href": "api/TF3.Core.Converters.SingleNodeToFormat.html",
    "title": "Class SingleNodeToFormat | Translation Framework v3",
    "keywords": "Class SingleNodeToFormat Converts a NodeContainerFormat to the format of the first children. Inheritance Object SingleNodeToFormat Implements Yarhl.FileFormat.IConverter < Yarhl.FileSystem.NodeContainerFormat , Yarhl.FileFormat.IFormat > Yarhl.FileFormat.IConverter Namespace : TF3.Core.Converters Assembly : TF3.Core.dll Syntax public class SingleNodeToFormat : Object Constructors SingleNodeToFormat() Declaration public SingleNodeToFormat() Methods Convert(NodeContainerFormat) Convert a NodeContainerFormat to the format of the first children. Declaration public IFormat Convert(NodeContainerFormat source) Parameters Type Name Description Yarhl.FileSystem.NodeContainerFormat source A 'single node' NodeContainerFormat. Returns Type Description Yarhl.FileFormat.IFormat The format of the node. Implements Yarhl.FileFormat.IConverter<, > Yarhl.FileFormat.IConverter"
  },
  "api/TF3.Core.Enums.BitmapExtractionFormat.html": {
    "href": "api/TF3.Core.Enums.BitmapExtractionFormat.html",
    "title": "Class BitmapExtractionFormat | Translation Framework v3",
    "keywords": "Class BitmapExtractionFormat Bitmap pixel formats. Inheritance Object BitmapExtractionFormat Namespace : TF3.Core.Enums Assembly : TF3.Core.dll Syntax public sealed class BitmapExtractionFormat : Enum Fields Png PNG format. Declaration public const BitmapExtractionFormat Png Field Value Type Description BitmapExtractionFormat Tga TGA format. Declaration public const BitmapExtractionFormat Tga Field Value Type Description BitmapExtractionFormat value__ Declaration public int value__ Field Value Type Description Int32"
  },
  "api/TF3.Core.Enums.BitmapPixelFormat.html": {
    "href": "api/TF3.Core.Enums.BitmapPixelFormat.html",
    "title": "Class BitmapPixelFormat | Translation Framework v3",
    "keywords": "Class BitmapPixelFormat Bitmap pixel formats. https://docs.sixlabors.com/api/ImageSharp/SixLabors.ImageSharp.PixelFormats.html#structs Inheritance Object BitmapPixelFormat Namespace : TF3.Core.Enums Assembly : TF3.Core.dll Syntax public sealed class BitmapPixelFormat : Enum Fields A8 Packed pixel type containing a single 8-bit normalized alpha value. Ranges from [0, 0, 0, 0] to [0, 0, 0, 1] in vector form. Declaration public const BitmapPixelFormat A8 Field Value Type Description BitmapPixelFormat Abgr32 Packed pixel type containing four 8-bit unsigned normalized values ranging from 0 to 255. The color components are stored in alpha, red, green, and blue order (least significant to most significant byte). Ranges from [0, 0, 0, 0] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat Abgr32 Field Value Type Description BitmapPixelFormat Argb32 Packed pixel type containing four 8-bit unsigned normalized values ranging from 0 to 255. The color components are stored in alpha, red, green, and blue order (least significant to most significant byte). Ranges from [0, 0, 0, 0] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat Argb32 Field Value Type Description BitmapPixelFormat Bgr24 Pixel type containing three 8-bit unsigned normalized values ranging from 0 to 255. The color components are stored in blue, green, red order (least significant to most significant byte). Ranges from [0, 0, 0, 1] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat Bgr24 Field Value Type Description BitmapPixelFormat Bgr565 Packed pixel type containing unsigned normalized values ranging from 0 to 1. The x and z components use 5 bits, and the y component uses 6 bits. Ranges from [0, 0, 0, 1] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat Bgr565 Field Value Type Description BitmapPixelFormat Bgra32 Packed pixel type containing four 8-bit unsigned normalized values ranging from 0 to 255. The color components are stored in blue, green, red, and alpha order (least significant to most significant byte). The format is binary compatible with System.Drawing.Imaging.PixelFormat.Format32bppArgb Ranges from [0, 0, 0, 0] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat Bgra32 Field Value Type Description BitmapPixelFormat Bgra4444 Packed pixel type containing unsigned normalized values, ranging from 0 to 1, using 4 bits each for x, y, z, and w. Ranges from [0, 0, 0, 0] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat Bgra4444 Field Value Type Description BitmapPixelFormat Bgra5551 Packed pixel type containing unsigned normalized values ranging from 0 to 1. The x , y and z components use 5 bits, and the w component uses 1 bit. Ranges from [0, 0, 0, 0] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat Bgra5551 Field Value Type Description BitmapPixelFormat Byte4 Packed pixel type containing four 8-bit unsigned integer values, ranging from 0 to 255. Ranges from [0, 0, 0, 0] to [255, 255, 255, 255] in vector form. Declaration public const BitmapPixelFormat Byte4 Field Value Type Description BitmapPixelFormat HalfSingle Packed pixel type containing a single 16 bit floating point value. Ranges from [-1, 0, 0, 1] to [1, 0, 0, 1] in vector form. Declaration public const BitmapPixelFormat HalfSingle Field Value Type Description BitmapPixelFormat HalfVector2 Packed pixel type containing two 16-bit floating-point values. Ranges from [-1, -1, 0, 1] to [1, 1, 0, 1] in vector form. Declaration public const BitmapPixelFormat HalfVector2 Field Value Type Description BitmapPixelFormat HalfVector4 Packed pixel type containing four 16-bit floating-point values. Ranges from [-1, -1, -1, -1] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat HalfVector4 Field Value Type Description BitmapPixelFormat L16 Packed pixel type containing a single 16-bit normalized luminance value. Ranges from [0, 0, 0, 1] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat L16 Field Value Type Description BitmapPixelFormat L8 Packed pixel type containing a single 8-bit normalized luminance value. Ranges from [0, 0, 0, 1] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat L8 Field Value Type Description BitmapPixelFormat La16 Packed pixel type containing two 8-bit normalized values representing luminance and alpha. Ranges from [0, 0, 0, 0] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat La16 Field Value Type Description BitmapPixelFormat La32 Packed pixel type containing two 16-bit normalized values representing luminance and alpha. Ranges from [0, 0, 0, 0] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat La32 Field Value Type Description BitmapPixelFormat NormalizedByte2 Packed pixel type containing two 8-bit signed normalized values, ranging from −1 to 1. Ranges from [-1, -1, 0, 1] to [1, 1, 0, 1] in vector form. Declaration public const BitmapPixelFormat NormalizedByte2 Field Value Type Description BitmapPixelFormat NormalizedByte4 Packed pixel type containing four 8-bit signed normalized values, ranging from −1 to 1. Ranges from [-1, -1, -1, -1] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat NormalizedByte4 Field Value Type Description BitmapPixelFormat NormalizedShort2 Packed pixel type containing two 16-bit signed normalized values, ranging from −1 to 1. Ranges from [-1, -1, 0, 1] to [1, 1, 0, 1] in vector form. Declaration public const BitmapPixelFormat NormalizedShort2 Field Value Type Description BitmapPixelFormat NormalizedShort4 Packed pixel type containing four 16-bit signed normalized values, ranging from −1 to 1. Ranges from [-1, -1, -1, -1] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat NormalizedShort4 Field Value Type Description BitmapPixelFormat Rg32 Packed pixel type containing two 16-bit unsigned normalized values ranging from 0 to 1. Ranges from [0, 0, 0, 1] to [1, 1, 0, 1] in vector form. Declaration public const BitmapPixelFormat Rg32 Field Value Type Description BitmapPixelFormat Rgb24 Pixel type containing three 8-bit unsigned normalized values ranging from 0 to 255. The color components are stored in red, green, blue order (least significant to most significant byte). Ranges from [0, 0, 0, 1] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat Rgb24 Field Value Type Description BitmapPixelFormat Rgb48 Packed pixel type containing three 16-bit unsigned normalized values ranging from 0 to 635535. Ranges from [0, 0, 0, 1] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat Rgb48 Field Value Type Description BitmapPixelFormat Rgba1010102 Packed vector type containing unsigned normalized values ranging from 0 to 1. The x, y and z components use 10 bits, and the w component uses 2 bits. Ranges from [0, 0, 0, 0] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat Rgba1010102 Field Value Type Description BitmapPixelFormat Rgba32 Packed pixel type containing four 8-bit unsigned normalized values ranging from 0 to 255. The color components are stored in red, green, blue, and alpha order (least significant to most significant byte). Ranges from [0, 0, 0, 0] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat Rgba32 Field Value Type Description BitmapPixelFormat Rgba64 Packed pixel type containing four 16-bit unsigned normalized values ranging from 0 to 65535. Ranges from [0, 0, 0, 0] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat Rgba64 Field Value Type Description BitmapPixelFormat RgbaVector Unpacked pixel type containing four 32-bit floating-point values typically ranging from 0 to 1. The color components are stored in red, green, blue, and alpha order. Ranges from [0, 0, 0, 0] to [1, 1, 1, 1] in vector form. Declaration public const BitmapPixelFormat RgbaVector Field Value Type Description BitmapPixelFormat Short2 Packed pixel type containing two 16-bit signed integer values. Ranges from [-32767, -32767, 0, 1] to [32767, 32767, 0, 1] in vector form. Declaration public const BitmapPixelFormat Short2 Field Value Type Description BitmapPixelFormat Short4 Packed pixel type containing four 16-bit signed integer values. Ranges from [-37267, -37267, -37267, -37267] to [37267, 37267, 37267, 37267] in vector form. Declaration public const BitmapPixelFormat Short4 Field Value Type Description BitmapPixelFormat Undefined Undefined pixel type. Declaration public const BitmapPixelFormat Undefined Field Value Type Description BitmapPixelFormat value__ Declaration public int value__ Field Value Type Description Int32"
  },
  "api/TF3.Core.Enums.html": {
    "href": "api/TF3.Core.Enums.html",
    "title": "Namespace TF3.Core.Enums | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Enums Classes BitmapExtractionFormat Bitmap pixel formats. BitmapPixelFormat Bitmap pixel formats. https://docs.sixlabors.com/api/ImageSharp/SixLabors.ImageSharp.PixelFormats.html#structs"
  },
  "api/TF3.Core.EventArgs.AssetEventArgs.html": {
    "href": "api/TF3.Core.EventArgs.AssetEventArgs.html",
    "title": "Class AssetEventArgs | Translation Framework v3",
    "keywords": "Class AssetEventArgs Asset events arguments. Inheritance Object AssetEventArgs Namespace : TF3.Core.EventArgs Assembly : TF3.Core.dll Syntax public class AssetEventArgs : Object Constructors AssetEventArgs(AssetInfo) Initializes a new instance of the AssetEventArgs class. Declaration public AssetEventArgs(AssetInfo assetInfo) Parameters Type Name Description AssetInfo assetInfo Asset info. Properties Data Gets the asset info. Declaration public AssetInfo Data { get; } Property Value Type Description AssetInfo"
  },
  "api/TF3.Core.EventArgs.ContainerEventArgs.html": {
    "href": "api/TF3.Core.EventArgs.ContainerEventArgs.html",
    "title": "Class ContainerEventArgs | Translation Framework v3",
    "keywords": "Class ContainerEventArgs Container events arguments. Inheritance Object ContainerEventArgs Namespace : TF3.Core.EventArgs Assembly : TF3.Core.dll Syntax public class ContainerEventArgs : Object Constructors ContainerEventArgs(ContainerInfo) Initializes a new instance of the ContainerEventArgs class. Declaration public ContainerEventArgs(ContainerInfo containerInfo) Parameters Type Name Description ContainerInfo containerInfo Container info. Properties Data Gets the container info. Declaration public ContainerInfo Data { get; } Property Value Type Description ContainerInfo"
  },
  "api/TF3.Core.EventArgs.html": {
    "href": "api/TF3.Core.EventArgs.html",
    "title": "Namespace TF3.Core.EventArgs | Translation Framework v3",
    "keywords": "Namespace TF3.Core.EventArgs Classes AssetEventArgs Asset events arguments. ContainerEventArgs Container events arguments. PatchEventArgs Patch events arguments. ScriptEventArgs Script events arguments."
  },
  "api/TF3.Core.EventArgs.PatchEventArgs.html": {
    "href": "api/TF3.Core.EventArgs.PatchEventArgs.html",
    "title": "Class PatchEventArgs | Translation Framework v3",
    "keywords": "Class PatchEventArgs Patch events arguments. Inheritance Object PatchEventArgs Namespace : TF3.Core.EventArgs Assembly : TF3.Core.dll Syntax public class PatchEventArgs : Object Constructors PatchEventArgs(PatchInfo) Initializes a new instance of the PatchEventArgs class. Declaration public PatchEventArgs(PatchInfo patchInfo) Parameters Type Name Description PatchInfo patchInfo Patch info. Properties Data Gets the patch info. Declaration public PatchInfo Data { get; } Property Value Type Description PatchInfo"
  },
  "api/TF3.Core.EventArgs.ScriptEventArgs.html": {
    "href": "api/TF3.Core.EventArgs.ScriptEventArgs.html",
    "title": "Class ScriptEventArgs | Translation Framework v3",
    "keywords": "Class ScriptEventArgs Script events arguments. Inheritance Object ScriptEventArgs Namespace : TF3.Core.EventArgs Assembly : TF3.Core.dll Syntax public class ScriptEventArgs : Object Constructors ScriptEventArgs(GameScript) Initializes a new instance of the ScriptEventArgs class. Declaration public ScriptEventArgs(GameScript script) Parameters Type Name Description GameScript script Script info. Properties Data Gets the script info. Declaration public GameScript Data { get; } Property Value Type Description GameScript"
  },
  "api/TF3.Core.Exceptions.ByteMismatchException.html": {
    "href": "api/TF3.Core.Exceptions.ByteMismatchException.html",
    "title": "Class ByteMismatchException | Translation Framework v3",
    "keywords": "Class ByteMismatchException Exception thrown when byte doesn't match with the expected one when applying a patch. Inheritance Object ByteMismatchException Namespace : TF3.Core.Exceptions Assembly : TF3.Core.dll Syntax public class ByteMismatchException : Exception Constructors ByteMismatchException() Initializes a new instance of the ByteMismatchException class. Declaration public ByteMismatchException() ByteMismatchException(SerializationInfo, StreamingContext) Initializes a new instance of the ByteMismatchException class. Declaration protected ByteMismatchException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. ByteMismatchException(String) Initializes a new instance of the ByteMismatchException class. Declaration public ByteMismatchException(string message) Parameters Type Name Description String message The error message that explains the reason for the exception. ByteMismatchException(String, Exception) Initializes a new instance of the ByteMismatchException class. Declaration public ByteMismatchException(string message, Exception innerException) Parameters Type Name Description String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/TF3.Core.Exceptions.ChecksumMismatchException.html": {
    "href": "api/TF3.Core.Exceptions.ChecksumMismatchException.html",
    "title": "Class ChecksumMismatchException | Translation Framework v3",
    "keywords": "Class ChecksumMismatchException Exception thrown when checksum doesn't match with the expected one. Inheritance Object ChecksumMismatchException Namespace : TF3.Core.Exceptions Assembly : TF3.Core.dll Syntax public class ChecksumMismatchException : Exception Constructors ChecksumMismatchException() Initializes a new instance of the ChecksumMismatchException class. Declaration public ChecksumMismatchException() ChecksumMismatchException(SerializationInfo, StreamingContext) Initializes a new instance of the ChecksumMismatchException class. Declaration protected ChecksumMismatchException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. ChecksumMismatchException(String) Initializes a new instance of the ChecksumMismatchException class. Declaration public ChecksumMismatchException(string message) Parameters Type Name Description String message The error message that explains the reason for the exception. ChecksumMismatchException(String, Exception) Initializes a new instance of the ChecksumMismatchException class. Declaration public ChecksumMismatchException(string message, Exception innerException) Parameters Type Name Description String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/TF3.Core.Exceptions.html": {
    "href": "api/TF3.Core.Exceptions.html",
    "title": "Namespace TF3.Core.Exceptions | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Exceptions Classes ByteMismatchException Exception thrown when byte doesn't match with the expected one when applying a patch. ChecksumMismatchException Exception thrown when checksum doesn't match with the expected one. UnknownConverterException Exception thrown when a Yarhl converter is not found."
  },
  "api/TF3.Core.Exceptions.UnknownConverterException.html": {
    "href": "api/TF3.Core.Exceptions.UnknownConverterException.html",
    "title": "Class UnknownConverterException | Translation Framework v3",
    "keywords": "Class UnknownConverterException Exception thrown when a Yarhl converter is not found. Inheritance Object UnknownConverterException Namespace : TF3.Core.Exceptions Assembly : TF3.Core.dll Syntax public class UnknownConverterException : Exception Constructors UnknownConverterException() Initializes a new instance of the UnknownConverterException class. Declaration public UnknownConverterException() UnknownConverterException(SerializationInfo, StreamingContext) Initializes a new instance of the UnknownConverterException class. Declaration protected UnknownConverterException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. UnknownConverterException(String) Initializes a new instance of the UnknownConverterException class. Declaration public UnknownConverterException(string message) Parameters Type Name Description String message The error message that explains the reason for the exception. UnknownConverterException(String, Exception) Initializes a new instance of the UnknownConverterException class. Declaration public UnknownConverterException(string message, Exception innerException) Parameters Type Name Description String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/TF3.Core.Formats.BinaryPatch.html": {
    "href": "api/TF3.Core.Formats.BinaryPatch.html",
    "title": "Class BinaryPatch | Translation Framework v3",
    "keywords": "Class BinaryPatch Binary patch format. Similar to 1337 patch format. Inheritance Object BinaryPatch Implements Yarhl.FileFormat.IFormat Namespace : TF3.Core.Formats Assembly : TF3.Core.dll Syntax public class BinaryPatch : Object Constructors BinaryPatch() Initializes a new instance of the BinaryPatch class. Declaration public BinaryPatch() Properties FileName Gets or sets the file to apply patch. Declaration public string FileName { get; set; } Property Value Type Description String Patches Gets or sets the list of byte replacements. Declaration public List<(long, byte, byte)> Patches { get; set; } Property Value Type Description List < (, , ) < Int64 , Byte , Byte >> RawOffset Gets or sets the data raw offset. Declaration public long RawOffset { get; set; } Property Value Type Description Int64 Implements Yarhl.FileFormat.IFormat"
  },
  "api/TF3.Core.Formats.BitmapFileFormat.html": {
    "href": "api/TF3.Core.Formats.BitmapFileFormat.html",
    "title": "Class BitmapFileFormat | Translation Framework v3",
    "keywords": "Class BitmapFileFormat IFormat wrapper for SixLabors.ImageSharp.Image. Inheritance Object BitmapFileFormat Implements Yarhl.FileFormat.IFormat Namespace : TF3.Core.Formats Assembly : TF3.Core.dll Syntax public class BitmapFileFormat : Object Constructors BitmapFileFormat() Initializes a new instance of the BitmapFileFormat class. Declaration public BitmapFileFormat() Properties Internal Gets or sets the Image. Declaration public Image Internal { get; set; } Property Value Type Description SixLabors.ImageSharp.Image Implements Yarhl.FileFormat.IFormat"
  },
  "api/TF3.Core.Formats.DdsFileFormat.html": {
    "href": "api/TF3.Core.Formats.DdsFileFormat.html",
    "title": "Class DdsFileFormat | Translation Framework v3",
    "keywords": "Class DdsFileFormat IFormat wrapper for BCnEncoder.Shared.ImageFiles.DdsFile. Inheritance Object DdsFileFormat Implements Yarhl.FileFormat.IFormat Namespace : TF3.Core.Formats Assembly : TF3.Core.dll Syntax public class DdsFileFormat : Object Constructors DdsFileFormat() Initializes a new instance of the DdsFileFormat class. Declaration public DdsFileFormat() Properties Internal Gets or sets the DdsFile. Declaration public DdsFile Internal { get; set; } Property Value Type Description BCnEncoder.Shared.ImageFiles.DdsFile Implements Yarhl.FileFormat.IFormat"
  },
  "api/TF3.Core.Formats.html": {
    "href": "api/TF3.Core.Formats.html",
    "title": "Namespace TF3.Core.Formats | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Formats Classes BinaryPatch Binary patch format. Similar to 1337 patch format. BitmapFileFormat IFormat wrapper for SixLabors.ImageSharp.Image. DdsFileFormat IFormat wrapper for BCnEncoder.Shared.ImageFiles.DdsFile. PortableExecutableFileFormat IFormat wrapper for AsmResolver.PE.File.PEFile."
  },
  "api/TF3.Core.Formats.PortableExecutableFileFormat.html": {
    "href": "api/TF3.Core.Formats.PortableExecutableFileFormat.html",
    "title": "Class PortableExecutableFileFormat | Translation Framework v3",
    "keywords": "Class PortableExecutableFileFormat IFormat wrapper for AsmResolver.PE.File.PEFile. Inheritance Object PortableExecutableFileFormat Implements Yarhl.FileFormat.ICloneableFormat Yarhl.FileFormat.IFormat Namespace : TF3.Core.Formats Assembly : TF3.Core.dll Syntax public class PortableExecutableFileFormat : Object Constructors PortableExecutableFileFormat() Initializes a new instance of the PortableExecutableFileFormat class. Declaration public PortableExecutableFileFormat() Properties Internal Gets or sets the PEFile. Declaration public PEFile Internal { get; set; } Property Value Type Description AsmResolver.PE.File.PEFile StringInfo Gets or sets the PEFile. Declaration public List<PortableExecutableStringInfo> StringInfo { get; set; } Property Value Type Description List < PortableExecutableStringInfo > Methods DeepClone() Declaration public object DeepClone() Returns Type Description Object Implements Yarhl.FileFormat.ICloneableFormat Yarhl.FileFormat.IFormat"
  },
  "api/TF3.Core.GameScript.html": {
    "href": "api/TF3.Core.GameScript.html",
    "title": "Class GameScript | Translation Framework v3",
    "keywords": "Class GameScript Game script. Includes all the needed info to extract and repack game files. Inheritance Object GameScript Namespace : TF3.Core Assembly : TF3.Core.dll Syntax public class GameScript : Object Constructors GameScript() Declaration public GameScript() Properties Assets Gets or sets the list of translatable assets. Declaration public List<AssetInfo> Assets { get; set; } Property Value Type Description List < AssetInfo > Containers Gets or sets the list of containers in the game. Declaration public List<ContainerInfo> Containers { get; set; } Property Value Type Description List < ContainerInfo > Game Gets or sets the script game name. Declaration public string Game { get; set; } Property Value Type Description String Name Gets or sets the script name (short name). Declaration public string Name { get; set; } Property Value Type Description String Parameters Gets or sets the list of parameters. Declaration public List<ParameterInfo> Parameters { get; set; } Property Value Type Description List < ParameterInfo > Patches Gets or sets the list of patches. Declaration public List<PatchInfo> Patches { get; set; } Property Value Type Description List < PatchInfo > Methods Extract(String, String) Extracts all translatable assets from the game. Declaration public void Extract(string gamePath, string outputPath) Parameters Type Name Description String gamePath Game install directory. String outputPath Output directory. Rebuild(String, String, String) Rebuild all translatable assets from the game. Declaration public void Rebuild(string gamePath, string translationPath, string outputPath) Parameters Type Name Description String gamePath Game install directory. String translationPath Translation and patches directory. String outputPath Output directory. Events AssetExtracted Event triggered AFTER asset extraction ends. Declaration public event EventHandler<AssetEventArgs> AssetExtracted Event Type Type Description EventHandler < AssetEventArgs > AssetExtracting Event triggered BEFORE asset extraction begins. Declaration public event EventHandler<AssetEventArgs> AssetExtracting Event Type Type Description EventHandler < AssetEventArgs > AssetRead Event triggered AFTER an asset is read. Declaration public event EventHandler<AssetEventArgs> AssetRead Event Type Type Description EventHandler < AssetEventArgs > AssetReading Event triggered BEFORE an asset is read. Declaration public event EventHandler<AssetEventArgs> AssetReading Event Type Type Description EventHandler < AssetEventArgs > AssetTranslated Event triggered AFTER an asset is translated. Declaration public event EventHandler<AssetEventArgs> AssetTranslated Event Type Type Description EventHandler < AssetEventArgs > AssetTranslating Event triggered BEFORE an asset is translated. Declaration public event EventHandler<AssetEventArgs> AssetTranslating Event Type Type Description EventHandler < AssetEventArgs > AssetTranslationFailed Event triggered if an asset failed to translate (missing files). Declaration public event EventHandler<AssetEventArgs> AssetTranslationFailed Event Type Type Description EventHandler < AssetEventArgs > ContainerRead Event triggered AFTER a container is read. Declaration public event EventHandler<ContainerEventArgs> ContainerRead Event Type Type Description EventHandler < ContainerEventArgs > ContainerReading Event triggered BEFORE a container is read. Declaration public event EventHandler<ContainerEventArgs> ContainerReading Event Type Type Description EventHandler < ContainerEventArgs > ContainerWriting Event triggered BEFORE a container is written. Declaration public event EventHandler<ContainerEventArgs> ContainerWriting Event Type Type Description EventHandler < ContainerEventArgs > ContainerWrote Event triggered AFTER a container is written. Declaration public event EventHandler<ContainerEventArgs> ContainerWrote Event Type Type Description EventHandler < ContainerEventArgs > PatchApplied Event triggered AFTER a patch is appiled. Declaration public event EventHandler<PatchEventArgs> PatchApplied Event Type Type Description EventHandler < PatchEventArgs > PatchApplying Event triggered BEFORE a patch is applied. Declaration public event EventHandler<PatchEventArgs> PatchApplying Event Type Type Description EventHandler < PatchEventArgs > PatchSkipped Event triggered AFTER a patch is skipped. Declaration public event EventHandler<PatchEventArgs> PatchSkipped Event Type Type Description EventHandler < PatchEventArgs > ScriptExtracted Event triggered AFTER extraction ends. Declaration public event EventHandler<ScriptEventArgs> ScriptExtracted Event Type Type Description EventHandler < ScriptEventArgs > ScriptExtracting Event triggered BEFORE extraction begins. Declaration public event EventHandler<ScriptEventArgs> ScriptExtracting Event Type Type Description EventHandler < ScriptEventArgs > ScriptRebuilding Event triggered BEFORE rebuilding begins. Declaration public event EventHandler<ScriptEventArgs> ScriptRebuilding Event Type Type Description EventHandler < ScriptEventArgs > ScriptRebuilt Event triggered AFTER rebuilding ends. Declaration public event EventHandler<ScriptEventArgs> ScriptRebuilt Event Type Type Description EventHandler < ScriptEventArgs >"
  },
  "api/TF3.Core.Helpers.ChecksumHelper.html": {
    "href": "api/TF3.Core.Helpers.ChecksumHelper.html",
    "title": "Class ChecksumHelper | Translation Framework v3",
    "keywords": "Class ChecksumHelper Checksum functions. Inheritance Object ChecksumHelper Namespace : TF3.Core.Helpers Assembly : TF3.Core.dll Syntax public static class ChecksumHelper : Object Methods Check(Stream, UInt64) Validates the checksum of a stream. Declaration public static bool Check(Stream stream, ulong expected) Parameters Type Name Description Stream stream The input stream. UInt64 expected The expected checksum value. Returns Type Description Boolean True if checksum matches with the expected value. Check(String, UInt64) Validates the checksum of a file. Declaration public static bool Check(string file, ulong expected) Parameters Type Name Description String file The input file. UInt64 expected The expected checksum value. Returns Type Description Boolean True if checksum matches with the expected value."
  },
  "api/TF3.Core.Helpers.HexStringJsonConverter.html": {
    "href": "api/TF3.Core.Helpers.HexStringJsonConverter.html",
    "title": "Class HexStringJsonConverter | Translation Framework v3",
    "keywords": "Class HexStringJsonConverter Json serializer for hexadecimal numbers. Inheritance Object HexStringJsonConverter Namespace : TF3.Core.Helpers Assembly : TF3.Core.dll Syntax public sealed class HexStringJsonConverter : JsonConverter<int> Constructors HexStringJsonConverter() Declaration public HexStringJsonConverter() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Declaration public override int Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonReader reader Type typeToConvert JsonSerializerOptions options Returns Type Description Int32 Write(Utf8JsonWriter, Int32, JsonSerializerOptions) Declaration public override void Write(Utf8JsonWriter writer, int value, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonWriter writer Int32 value JsonSerializerOptions options"
  },
  "api/TF3.Core.Helpers.HexStringListJsonConverter.html": {
    "href": "api/TF3.Core.Helpers.HexStringListJsonConverter.html",
    "title": "Class HexStringListJsonConverter | Translation Framework v3",
    "keywords": "Class HexStringListJsonConverter Json serializer for hexadecimal number arrays. Inheritance Object HexStringListJsonConverter Namespace : TF3.Core.Helpers Assembly : TF3.Core.dll Syntax public sealed class HexStringListJsonConverter : JsonConverter<List<int>> Constructors HexStringListJsonConverter() Declaration public HexStringListJsonConverter() Methods Read(ref Utf8JsonReader, Type, JsonSerializerOptions) Declaration public override List<int> Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonReader reader Type typeToConvert JsonSerializerOptions options Returns Type Description List < Int32 > Write(Utf8JsonWriter, List<Int32>, JsonSerializerOptions) Declaration public override void Write(Utf8JsonWriter writer, List<int> value, JsonSerializerOptions options) Parameters Type Name Description Utf8JsonWriter writer List < Int32 > value JsonSerializerOptions options"
  },
  "api/TF3.Core.Helpers.html": {
    "href": "api/TF3.Core.Helpers.html",
    "title": "Namespace TF3.Core.Helpers | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Helpers Classes ChecksumHelper Checksum functions. HexStringJsonConverter Json serializer for hexadecimal numbers. HexStringListJsonConverter Json serializer for hexadecimal number arrays. MapStringLib Converter between FullWidth and HalfWidth characters. https://source.winehq.org/source/dlls/kernel32/locale.c . YarhlNodeExtension Node extension methods."
  },
  "api/TF3.Core.Helpers.MapStringLib.html": {
    "href": "api/TF3.Core.Helpers.MapStringLib.html",
    "title": "Class MapStringLib | Translation Framework v3",
    "keywords": "Class MapStringLib Converter between FullWidth and HalfWidth characters. https://source.winehq.org/source/dlls/kernel32/locale.c . Inheritance Object MapStringLib Namespace : TF3.Core.Helpers Assembly : TF3.Core.dll Syntax public static class MapStringLib : Object Methods ToFullWidth(String) Converts a string to full width characters. Declaration public static string ToFullWidth(string input) Parameters Type Name Description String input The input string. Returns Type Description String The full width string. ToHalfWidth(String) Converts a string to half width characters. Declaration public static string ToHalfWidth(string input) Parameters Type Name Description String input The input string. Returns Type Description String The half width string."
  },
  "api/TF3.Core.Helpers.YarhlNodeExtension.html": {
    "href": "api/TF3.Core.Helpers.YarhlNodeExtension.html",
    "title": "Class YarhlNodeExtension | Translation Framework v3",
    "keywords": "Class YarhlNodeExtension Node extension methods. Inheritance Object YarhlNodeExtension Namespace : TF3.Core.Helpers Assembly : TF3.Core.dll Syntax public static class YarhlNodeExtension : Object Methods Transform(Node, List<ConverterInfo>, List<ParameterInfo>) Transforms a Yarhl node using a chain of converters. Declaration public static void Transform(this Node node, List<ConverterInfo> converters, List<ParameterInfo> parameters) Parameters Type Name Description Yarhl.FileSystem.Node node The original node. List < ConverterInfo > converters Converters list. List < ParameterInfo > parameters Allowed parameters list. Translate(Node, Node, String) Calls a translator converter. Declaration public static void Translate(this Node node, Node translation, string translator) Parameters Type Name Description Yarhl.FileSystem.Node node The original node. Yarhl.FileSystem.Node translation The node with the translation. String translator The translator converter."
  },
  "api/TF3.Core.html": {
    "href": "api/TF3.Core.html",
    "title": "Namespace TF3.Core | Translation Framework v3",
    "keywords": "Namespace TF3.Core Classes GameScript Game script. Includes all the needed info to extract and repack game files. ScriptManager Script manager."
  },
  "api/TF3.Core.Models.AssetFileInfo.html": {
    "href": "api/TF3.Core.Models.AssetFileInfo.html",
    "title": "Class AssetFileInfo | Translation Framework v3",
    "keywords": "Class AssetFileInfo Game asset file info. Inheritance Object FileInfo AssetFileInfo Inherited Members FileInfo.Name FileInfo.ContainerId FileInfo.Path FileInfo.Checksum Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class AssetFileInfo : FileInfo Constructors AssetFileInfo() Declaration public AssetFileInfo() Properties Readers Gets or sets the list of converters needed to read the file. Declaration public List<ConverterInfo> Readers { get; set; } Property Value Type Description List < ConverterInfo > Writers Gets or sets the list of converters needed to write the file. Declaration public List<ConverterInfo> Writers { get; set; } Property Value Type Description List < ConverterInfo >"
  },
  "api/TF3.Core.Models.AssetInfo.html": {
    "href": "api/TF3.Core.Models.AssetInfo.html",
    "title": "Class AssetInfo | Translation Framework v3",
    "keywords": "Class AssetInfo Game asset info. Inheritance Object AssetInfo Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class AssetInfo : Object Constructors AssetInfo() Declaration public AssetInfo() Properties Extractors Gets or sets the list of converters needed to extract the translatable contents. Declaration public List<ConverterInfo> Extractors { get; set; } Property Value Type Description List < ConverterInfo > Files Gets or sets the list of files in this asset. Declaration public List<AssetFileInfo> Files { get; set; } Property Value Type Description List < AssetFileInfo > Id Gets or sets the asset id. Declaration public string Id { get; set; } Property Value Type Description String OutputNames Gets or sets the list of output names. Declaration public List<string> OutputNames { get; set; } Property Value Type Description List < String > TranslationMergers Gets or sets the list of converters needed to merge the translation files. Declaration public List<ConverterInfo> TranslationMergers { get; set; } Property Value Type Description List < ConverterInfo > Translator Gets or sets the name of the translator converter. Declaration public string Translator { get; set; } Property Value Type Description String"
  },
  "api/TF3.Core.Models.ContainerInfo.html": {
    "href": "api/TF3.Core.Models.ContainerInfo.html",
    "title": "Class ContainerInfo | Translation Framework v3",
    "keywords": "Class ContainerInfo Game file container info. Inheritance Object ContainerInfo Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class ContainerInfo : Object Constructors ContainerInfo() Declaration public ContainerInfo() Properties Checksums Gets or sets the container checksums. If it is 0, the file won't be checked. Declaration public List<ulong> Checksums { get; set; } Property Value Type Description List < UInt64 > Containers Gets or sets the list of containers in this container. Declaration public List<ContainerInfo> Containers { get; set; } Property Value Type Description List < ContainerInfo > Id Gets or sets the container id. Declaration public string Id { get; set; } Property Value Type Description String Name Gets or sets the container name. Declaration public string Name { get; set; } Property Value Type Description String Paths Gets or sets the container paths. Declaration public List<string> Paths { get; set; } Property Value Type Description List < String > Readers Gets or sets the list of converters needed to read the container. Declaration public List<ConverterInfo> Readers { get; set; } Property Value Type Description List < ConverterInfo > Writers Gets or sets the list of converters needed to write the container. Declaration public List<ConverterInfo> Writers { get; set; } Property Value Type Description List < ConverterInfo >"
  },
  "api/TF3.Core.Models.ConverterInfo.html": {
    "href": "api/TF3.Core.Models.ConverterInfo.html",
    "title": "Class ConverterInfo | Translation Framework v3",
    "keywords": "Class ConverterInfo Yarhl converter info. Inheritance Object ConverterInfo Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class ConverterInfo : Object Constructors ConverterInfo() Declaration public ConverterInfo() Properties ParameterId Gets or sets the converter parameter id. Declaration public string ParameterId { get; set; } Property Value Type Description String TypeName Gets or sets the converter type name. Declaration public string TypeName { get; set; } Property Value Type Description String"
  },
  "api/TF3.Core.Models.FileInfo.html": {
    "href": "api/TF3.Core.Models.FileInfo.html",
    "title": "Class FileInfo | Translation Framework v3",
    "keywords": "Class FileInfo Game file info. Inheritance Object FileInfo AssetFileInfo Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class FileInfo : Object Constructors FileInfo() Declaration public FileInfo() Properties Checksum Gets or sets the file checksum. If it is 0, it won't be checked. Declaration public ulong Checksum { get; set; } Property Value Type Description UInt64 ContainerId Gets or sets the container id. Declaration public string ContainerId { get; set; } Property Value Type Description String Name Gets or sets the file name. Declaration public string Name { get; set; } Property Value Type Description String Path Gets or sets the file path (inside the container). Declaration public string Path { get; set; } Property Value Type Description String"
  },
  "api/TF3.Core.Models.html": {
    "href": "api/TF3.Core.Models.html",
    "title": "Namespace TF3.Core.Models | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Models Classes AssetFileInfo Game asset file info. AssetInfo Game asset info. ContainerInfo Game file container info. ConverterInfo Yarhl converter info. FileInfo Game file info. ParameterInfo Converter parameter info. PatchInfo Binary patch info. PortableExecutableStringInfo Parameters for Portable Executable reading."
  },
  "api/TF3.Core.Models.ParameterInfo.html": {
    "href": "api/TF3.Core.Models.ParameterInfo.html",
    "title": "Class ParameterInfo | Translation Framework v3",
    "keywords": "Class ParameterInfo Converter parameter info. Inheritance Object ParameterInfo Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class ParameterInfo : Object Constructors ParameterInfo() Declaration public ParameterInfo() Properties Id Gets or sets the parameter id. Declaration public string Id { get; set; } Property Value Type Description String TypeName Gets or sets the parameter type name. Declaration public string TypeName { get; set; } Property Value Type Description String Value Gets or sets the parameter value. Declaration public JsonElement Value { get; set; } Property Value Type Description JsonElement"
  },
  "api/TF3.Core.Models.PatchInfo.html": {
    "href": "api/TF3.Core.Models.PatchInfo.html",
    "title": "Class PatchInfo | Translation Framework v3",
    "keywords": "Class PatchInfo Binary patch info. Inheritance Object PatchInfo Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class PatchInfo : Object Constructors PatchInfo() Declaration public PatchInfo() Properties File Gets or sets the file to patch. Declaration public FileInfo File { get; set; } Property Value Type Description FileInfo Id Gets or sets the patch id. Declaration public string Id { get; set; } Property Value Type Description String Patch Gets or sets the patch to apply. Declaration public string Patch { get; set; } Property Value Type Description String RawAddress Gets or sets the data raw address (in exe files). Declaration public long RawAddress { get; set; } Property Value Type Description Int64 VirtualAddress Gets or sets the data virtual address (in exe files). Declaration public long VirtualAddress { get; set; } Property Value Type Description Int64"
  },
  "api/TF3.Core.Models.PortableExecutableStringInfo.html": {
    "href": "api/TF3.Core.Models.PortableExecutableStringInfo.html",
    "title": "Class PortableExecutableStringInfo | Translation Framework v3",
    "keywords": "Class PortableExecutableStringInfo Parameters for Portable Executable reading. Inheritance Object PortableExecutableStringInfo Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class PortableExecutableStringInfo : Object Constructors PortableExecutableStringInfo() Declaration public PortableExecutableStringInfo() Properties Address Gets or sets the string address inside the executable file. Declaration public int Address { get; set; } Property Value Type Description Int32 Encoding Gets or sets the string encoding. Declaration public string Encoding { get; set; } Property Value Type Description String FoundString Gets or sets the string found inside the executable file. Declaration public string FoundString { get; set; } Property Value Type Description String Pointers Gets or sets the list of pointers referencing the string. Declaration public List<int> Pointers { get; set; } Property Value Type Description List < Int32 > Size Gets or sets the size in bytes of the string. Declaration public int Size { get; set; } Property Value Type Description Int32"
  },
  "api/TF3.Core.ScriptManager.html": {
    "href": "api/TF3.Core.ScriptManager.html",
    "title": "Class ScriptManager | Translation Framework v3",
    "keywords": "Class ScriptManager Script manager. Inheritance Object ScriptManager Namespace : TF3.Core Assembly : TF3.Core.dll Syntax public static class ScriptManager : Object Properties Scripts Gets a list of loaded scripts. Declaration public static IReadOnlyList<GameScript> Scripts { get; } Property Value Type Description IReadOnlyList < GameScript > Methods Clear() Empties the loaded scripts. Declaration public static void Clear() LoadScripts(String) Loads all the scripts in a directory. Declaration public static void LoadScripts(string path) Parameters Type Name Description String path The directory containing the scripts."
  },
  "CONTRIBUTING.html": {
    "href": "CONTRIBUTING.html",
    "title": "Contributing to the project | Translation Framework v3",
    "keywords": "Contributing to the project Thanks for taking the time to contribute! ✨ In this document you will find all the information you need to make sure the project continues to be the high-quality product we want to be! Reporting issues Issues When reporting a problem, be as specific as possible. Ideally, you should provide an small snippet of code that reproduces the issue. Try to provide also the following information: OS: Linux / Windows / Mac OS Runtime: .NET Framework, Mono, .NET Core Version of the product Stacktrace if any What's happening and what you expect to happen Features If you want to ask for a new feature, first make sure it hasn't been reported yet by using the search box in the issue tab. Make sure that the feature aligns with the direction of the project. Pull Request Before starting a pull request, create an issue requesting the feature you would like to see and implement. If you are fixing a bug, create also an issue to be able to track the problem. State that you would like to work on that. The team will reply to the issue as soon as possible, discussing the proposal if needed. This guarantee that later on the Pull Request we don't reject the proposal without having a discussion first and we don't waste time. In general, the process to create a pull request is: Create an issue describing the bug or feature and state you would like to work on that. The team will cheer you and/or discuss with you the issue. Fork the project. Clone your forked project and create a git branch. Make the necessary code changes in as many commits as you want. The commit message should follow this convention: :emoji: Short description #IssueID Long description if needed. Create a pull request. After reviewing your changes and making any new commits if needed, the team will approve and merge it. For a complete list of emoji description see this repository . Code Guidelines We follow the DotNet Runtime coding style . File headers ✔️ DO put the license in the file header with this format: // // <FileName>.cs // // Author: // <AuthorName> <email@example.com> // // Copyright (c) <Year> <AuthorName> // // Permission is hereby granted, free of charge, to any person obtaining a copy // of this software and associated documentation files (the \"Software\"), to deal // in the Software without restriction, including without limitation the rights // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell // copies of the Software, and to permit persons to whom the Software is // furnished to do so, subject to the following conditions: // // The above copyright notice and this permission notice shall be included in // all copies or substantial portions of the Software. // // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN // THE SOFTWARE. Usings ✔️ DO put the using inside the namespace. ✔️ DO include all the namespaces you are using. ✔️ DO use the using statement for IDisposable types."
  },
  "dev/Changelog.html": {
    "href": "dev/Changelog.html",
    "title": "vNext (January 02, 2022) | Translation Framework v3",
    "keywords": "vNext (January 02, 2022) As part of this release we had 8 issues closed. Documentation #16 Add dotnet runtime to README.md #17 Update README.md enhancements #24 Multi file containers #25 Update build system to the latest version #26 Update package dependencies #27 Extract using node names if outputNames are unknown #28 Bitmap converters #29 Portable executable converters v0.1.1 (December 28, 2021) As part of this release we had 1 issue closed. enhancement #13 Fix dependencies v0.1.0 (December 27, 2021) First alpha release"
  },
  "guides/Contributing.html": {
    "href": "guides/Contributing.html",
    "title": "Contributing to the project | Translation Framework v3",
    "keywords": "Contributing to the project Thanks for taking the time to contribute! ✨ In this document you will find all the information you need to make sure the project continues to be the high-quality product we want to be! Reporting issues Issues When reporting a problem, be as specific as possible. Ideally, you should provide an small snippet of code that reproduces the issue. Try to provide also the following information: OS: Linux / Windows / Mac OS Runtime: .NET Framework, Mono, .NET Core Version of the product Stacktrace if any What's happening and what you expect to happen Features If you want to ask for a new feature, first make sure it hasn't been reported yet by using the search box in the issue tab. Make sure that the feature aligns with the direction of the project. Pull Request Before starting a pull request, create an issue requesting the feature you would like to see and implement. If you are fixing a bug, create also an issue to be able to track the problem. State that you would like to work on that. The team will reply to the issue as soon as possible, discussing the proposal if needed. This guarantee that later on the Pull Request we don't reject the proposal without having a discussion first and we don't waste time. In general, the process to create a pull request is: Create an issue describing the bug or feature and state you would like to work on that. The team will cheer you and/or discuss with you the issue. Fork the project. Clone your forked project and create a git branch. Make the necessary code changes in as many commits as you want. The commit message should follow this convention: :emoji: Short description #IssueID Long description if needed. Create a pull request. After reviewing your changes and making any new commits if needed, the team will approve and merge it. For a complete list of emoji description see this repository . Code Guidelines We follow the DotNet Runtime coding style . File headers ✔️ DO put the license in the file header with this format: // // <FileName>.cs // // Author: // <AuthorName> <email@example.com> // // Copyright (c) <Year> <AuthorName> // // Permission is hereby granted, free of charge, to any person obtaining a copy // of this software and associated documentation files (the \"Software\"), to deal // in the Software without restriction, including without limitation the rights // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell // copies of the Software, and to permit persons to whom the Software is // furnished to do so, subject to the following conditions: // // The above copyright notice and this permission notice shall be included in // all copies or substantial portions of the Software. // // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN // THE SOFTWARE. Usings ✔️ DO put the using inside the namespace. ✔️ DO include all the namespaces you are using. ✔️ DO use the using statement for IDisposable types."
  },
  "guides/First-Steps.html": {
    "href": "guides/First-Steps.html",
    "title": "First steps | Translation Framework v3",
    "keywords": "First steps Welcome to this project!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Translation Framework v3 (Powered by Yarhl) | Translation Framework v3",
    "keywords": "Translation Framework v3 (Powered by Yarhl ) Current State This framework is in alpha state and under active development. There might be breaking changes at any moment. Plugins Currently, 2 games are supported: Yakuza Kiwami 2 (Steam) Zwei: The Arges Adventure (Steam) Requisites .NET 6.0 runtime Usage NOTE: This is a command line application. \"Double clicking\" on the exe is not enough. Create plugins and scripts directories inside the app folder. Copy plugins files to the respective folders. See each plugin README for details. Run the app. List available plugins TF3.CommandLine.exe listscripts Extract assets TF3.CommandLine.exe extract --script [script-name] --install-dir [game-files-directory] --output-dir [output-directory] Rebuild assets TF3.CommandLine.exe rebuild --script [script-name] --install-dir [game-files-directory] --translation-dir [translation-files-directory] --output-dir [output-directory] Credits Thanks to Pleonex for Yarhl and PleOps.Cake . Other libraries used: CommandLineParser , Dahomey.Json , xxHash , BCnEncoder.Net , ImageSharp Icon by Papirus Development Team ."
  },
  "README.html": {
    "href": "README.html",
    "title": "Translation Framework v3 (Powered by Yarhl) | Translation Framework v3",
    "keywords": "Translation Framework v3 (Powered by Yarhl ) Current State This framework is in alpha state and under active development. There might be breaking changes at any moment. Plugins Currently, 2 games are supported: Yakuza Kiwami 2 (Steam) Zwei: The Arges Adventure (Steam) Requisites .NET 6.0 runtime Usage NOTE: This is a command line application. \"Double clicking\" on the exe is not enough. Create plugins and scripts directories inside the app folder. Copy plugins files to the respective folders. See each plugin README for details. Run the app. List available plugins TF3.CommandLine.exe listscripts Extract assets TF3.CommandLine.exe extract --script [script-name] --install-dir [game-files-directory] --output-dir [output-directory] Rebuild assets TF3.CommandLine.exe rebuild --script [script-name] --install-dir [game-files-directory] --translation-dir [translation-files-directory] --output-dir [output-directory] Credits Thanks to Pleonex for Yarhl and PleOps.Cake . Other libraries used: CommandLineParser , Dahomey.Json , xxHash , BCnEncoder.Net , ImageSharp Icon by Papirus Development Team ."
  }
}