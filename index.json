{
  "api/TF3.Core.Converters.BinaryPatch.Apply.html": {
    "href": "api/TF3.Core.Converters.BinaryPatch.Apply.html",
    "title": "Class Apply | Translation Framework v3",
    "keywords": "Class Apply Binary patch applier. Inheritance Object Apply Implements IInitializer < BinaryPatch > Namespace : TF3.Core.Converters.BinaryPatch Assembly : TF3.Core.dll Syntax public class Apply : IConverter<BinaryFormat, BinaryFormat>, IInitializer<BinaryPatch> Methods | Improve this Doc View Source Convert(BinaryFormat) Applies a binary patch to a file. Declaration public BinaryFormat Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source The original BinaryFormat. Returns Type Description BinaryFormat The BinaryFormat with the applied patch. | Improve this Doc View Source Initialize(BinaryPatch) Converter initializer. Declaration public void Initialize(BinaryPatch parameters) Parameters Type Name Description BinaryPatch parameters Patch info. Remarks Initialization is mandatory. Implements IInitializer<>"
  },
  "api/TF3.Core.Converters.BinaryPatch.html": {
    "href": "api/TF3.Core.Converters.BinaryPatch.html",
    "title": "Namespace TF3.Core.Converters.BinaryPatch | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Converters.BinaryPatch Classes Apply Binary patch applier. Reader Patch file reader."
  },
  "api/TF3.Core.Converters.BinaryPatch.Reader.html": {
    "href": "api/TF3.Core.Converters.BinaryPatch.Reader.html",
    "title": "Class Reader | Translation Framework v3",
    "keywords": "Class Reader Patch file reader. Inheritance Object Reader Implements IInitializer < Int64 > Namespace : TF3.Core.Converters.BinaryPatch Assembly : TF3.Core.dll Syntax public class Reader : IConverter<BinaryFormat, BinaryPatch>, IInitializer<long> Methods | Improve this Doc View Source Convert(BinaryFormat) Reads a patch file. Declaration public BinaryPatch Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source The patch file. Returns Type Description BinaryPatch The patch. | Improve this Doc View Source Initialize(Int64) Initialize the reader. Declaration public void Initialize(long parameters) Parameters Type Name Description Int64 parameters File Raw Offset. Implements IInitializer<>"
  },
  "api/TF3.Core.Converters.DdsImage.ExtractToPng.html": {
    "href": "api/TF3.Core.Converters.DdsImage.ExtractToPng.html",
    "title": "Class ExtractToPng | Translation Framework v3",
    "keywords": "Class ExtractToPng DDS to PNG converter. Inheritance Object ExtractToPng Namespace : TF3.Core.Converters.DdsImage Assembly : TF3.Core.dll Syntax public class ExtractToPng : IConverter<DdsFileFormat, BinaryFormat> Methods | Improve this Doc View Source Convert(DdsFileFormat) Converts a DDS file into PNG. Declaration public BinaryFormat Convert(DdsFileFormat source) Parameters Type Name Description DdsFileFormat source The DDS file. Returns Type Description BinaryFormat The PNG file."
  },
  "api/TF3.Core.Converters.DdsImage.ExtractToTga.html": {
    "href": "api/TF3.Core.Converters.DdsImage.ExtractToTga.html",
    "title": "Class ExtractToTga | Translation Framework v3",
    "keywords": "Class ExtractToTga DDS to TGA converter. Inheritance Object ExtractToTga Namespace : TF3.Core.Converters.DdsImage Assembly : TF3.Core.dll Syntax public class ExtractToTga : IConverter<DdsFileFormat, BinaryFormat> Methods | Improve this Doc View Source Convert(DdsFileFormat) Converts a DDS file into TGA. Declaration public BinaryFormat Convert(DdsFileFormat source) Parameters Type Name Description DdsFileFormat source The DDS file. Returns Type Description BinaryFormat The TGA file."
  },
  "api/TF3.Core.Converters.DdsImage.html": {
    "href": "api/TF3.Core.Converters.DdsImage.html",
    "title": "Namespace TF3.Core.Converters.DdsImage | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Converters.DdsImage Classes ExtractToPng DDS to PNG converter. ExtractToTga DDS to TGA converter. Reader DDS file reader. Replace Replaces the original DDS with a new one. Writer DDS file writer."
  },
  "api/TF3.Core.Converters.DdsImage.Reader.html": {
    "href": "api/TF3.Core.Converters.DdsImage.Reader.html",
    "title": "Class Reader | Translation Framework v3",
    "keywords": "Class Reader DDS file reader. Inheritance Object Reader Namespace : TF3.Core.Converters.DdsImage Assembly : TF3.Core.dll Syntax public class Reader : IConverter<BinaryFormat, DdsFileFormat> Methods | Improve this Doc View Source Convert(BinaryFormat) Reads a DDS file. Declaration public DdsFileFormat Convert(BinaryFormat source) Parameters Type Name Description BinaryFormat source The DDS file. Returns Type Description DdsFileFormat The DDS format."
  },
  "api/TF3.Core.Converters.DdsImage.Replace.html": {
    "href": "api/TF3.Core.Converters.DdsImage.Replace.html",
    "title": "Class Replace | Translation Framework v3",
    "keywords": "Class Replace Replaces the original DDS with a new one. Inheritance Object Replace Implements IInitializer < BinaryFormat > Namespace : TF3.Core.Converters.DdsImage Assembly : TF3.Core.dll Syntax public class Replace : IConverter<DdsFileFormat, DdsFileFormat>, IInitializer<BinaryFormat> Methods | Improve this Doc View Source Convert(DdsFileFormat) Replaces the original DDS with a new one. Declaration public DdsFileFormat Convert(DdsFileFormat source) Parameters Type Name Description DdsFileFormat source Original DDS. Returns Type Description DdsFileFormat New DDS. | Improve this Doc View Source Initialize(BinaryFormat) Converter initializer. Declaration public void Initialize(BinaryFormat parameters) Parameters Type Name Description BinaryFormat parameters New image binary. Remarks Initialization is mandatory. Implements IInitializer<>"
  },
  "api/TF3.Core.Converters.DdsImage.Writer.html": {
    "href": "api/TF3.Core.Converters.DdsImage.Writer.html",
    "title": "Class Writer | Translation Framework v3",
    "keywords": "Class Writer DDS file writer. Inheritance Object Writer Namespace : TF3.Core.Converters.DdsImage Assembly : TF3.Core.dll Syntax public class Writer : IConverter<DdsFileFormat, BinaryFormat> Methods | Improve this Doc View Source Convert(DdsFileFormat) Writes a DDS file. Declaration public BinaryFormat Convert(DdsFileFormat source) Parameters Type Name Description DdsFileFormat source The DDS format. Returns Type Description BinaryFormat The DDS file."
  },
  "api/TF3.Core.Converters.FormatReplace.html": {
    "href": "api/TF3.Core.Converters.FormatReplace.html",
    "title": "Class FormatReplace | Translation Framework v3",
    "keywords": "Class FormatReplace Format replacer. Inheritance Object FormatReplace Implements IInitializer < IFormat > Namespace : TF3.Core.Converters Assembly : TF3.Core.dll Syntax public class FormatReplace : IConverter<IFormat, IFormat>, IInitializer<IFormat> Methods | Improve this Doc View Source Convert(IFormat) Fully replace a IFormat. Declaration public IFormat Convert(IFormat source) Parameters Type Name Description IFormat source The original format. Returns Type Description IFormat The new format. | Improve this Doc View Source Initialize(IFormat) Set the new format. Declaration public void Initialize(IFormat parameters) Parameters Type Name Description IFormat parameters The new format. Implements IInitializer<>"
  },
  "api/TF3.Core.Converters.FormatToSingleNode.html": {
    "href": "api/TF3.Core.Converters.FormatToSingleNode.html",
    "title": "Class FormatToSingleNode | Translation Framework v3",
    "keywords": "Class FormatToSingleNode Converts a IFormat to a NodeContainerFormat. Inheritance Object FormatToSingleNode Implements IInitializer < String > Namespace : TF3.Core.Converters Assembly : TF3.Core.dll Syntax public class FormatToSingleNode : IConverter<IFormat, NodeContainerFormat>, IInitializer<string> Methods | Improve this Doc View Source Convert(IFormat) Convert a format to a single node NodeContainerFormat. Declaration public NodeContainerFormat Convert(IFormat source) Parameters Type Name Description IFormat source A format. Returns Type Description NodeContainerFormat The 'single node' NodeContainerFormat. | Improve this Doc View Source Initialize(String) Set the node name. Declaration public void Initialize(string parameters) Parameters Type Name Description String parameters Node name. Implements IInitializer<>"
  },
  "api/TF3.Core.Converters.html": {
    "href": "api/TF3.Core.Converters.html",
    "title": "Namespace TF3.Core.Converters | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Converters Classes FormatReplace Format replacer. FormatToSingleNode Converts a IFormat to a NodeContainerFormat. SingleNodeToFormat Converts a NodeContainerFormat to the format of the first children."
  },
  "api/TF3.Core.Converters.Po.html": {
    "href": "api/TF3.Core.Converters.Po.html",
    "title": "Namespace TF3.Core.Converters.Po | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Converters.Po Classes NodeContainerToPo Po files merger."
  },
  "api/TF3.Core.Converters.Po.NodeContainerToPo.html": {
    "href": "api/TF3.Core.Converters.Po.NodeContainerToPo.html",
    "title": "Class NodeContainerToPo | Translation Framework v3",
    "keywords": "Class NodeContainerToPo Po files merger. Inheritance Object NodeContainerToPo Namespace : TF3.Core.Converters.Po Assembly : TF3.Core.dll Syntax public class NodeContainerToPo : IConverter<NodeContainerFormat, Yarhl.Media.Text.Po> Methods | Improve this Doc View Source Convert(NodeContainerFormat) Merges all parts (BinaryFormat) in a Po file. Declaration public Yarhl.Media.Text.Po Convert(NodeContainerFormat source) Parameters Type Name Description NodeContainerFormat source Po parts. Returns Type Description Yarhl.Media.Text.Po The merged Po."
  },
  "api/TF3.Core.Converters.SingleNodeToFormat.html": {
    "href": "api/TF3.Core.Converters.SingleNodeToFormat.html",
    "title": "Class SingleNodeToFormat | Translation Framework v3",
    "keywords": "Class SingleNodeToFormat Converts a NodeContainerFormat to the format of the first children. Inheritance Object SingleNodeToFormat Namespace : TF3.Core.Converters Assembly : TF3.Core.dll Syntax public class SingleNodeToFormat : IConverter<NodeContainerFormat, IFormat> Methods | Improve this Doc View Source Convert(NodeContainerFormat) Convert a NodeContainerFormat to the format of the first children. Declaration public IFormat Convert(NodeContainerFormat source) Parameters Type Name Description NodeContainerFormat source A 'single node' NodeContainerFormat. Returns Type Description IFormat The format of the node."
  },
  "api/TF3.Core.EventArgs.AssetEventArgs.html": {
    "href": "api/TF3.Core.EventArgs.AssetEventArgs.html",
    "title": "Class AssetEventArgs | Translation Framework v3",
    "keywords": "Class AssetEventArgs Asset events arguments. Inheritance Object AssetEventArgs Namespace : TF3.Core.EventArgs Assembly : TF3.Core.dll Syntax public class AssetEventArgs : object Constructors | Improve this Doc View Source AssetEventArgs(AssetInfo) Initializes a new instance of the AssetEventArgs class. Declaration public AssetEventArgs(AssetInfo assetInfo) Parameters Type Name Description AssetInfo assetInfo Asset info. Properties | Improve this Doc View Source Data Gets the asset info. Declaration public AssetInfo Data { get; } Property Value Type Description AssetInfo"
  },
  "api/TF3.Core.EventArgs.ContainerEventArgs.html": {
    "href": "api/TF3.Core.EventArgs.ContainerEventArgs.html",
    "title": "Class ContainerEventArgs | Translation Framework v3",
    "keywords": "Class ContainerEventArgs Container events arguments. Inheritance Object ContainerEventArgs Namespace : TF3.Core.EventArgs Assembly : TF3.Core.dll Syntax public class ContainerEventArgs : object Constructors | Improve this Doc View Source ContainerEventArgs(ContainerInfo) Initializes a new instance of the ContainerEventArgs class. Declaration public ContainerEventArgs(ContainerInfo containerInfo) Parameters Type Name Description ContainerInfo containerInfo Container info. Properties | Improve this Doc View Source Data Gets the container info. Declaration public ContainerInfo Data { get; } Property Value Type Description ContainerInfo"
  },
  "api/TF3.Core.EventArgs.html": {
    "href": "api/TF3.Core.EventArgs.html",
    "title": "Namespace TF3.Core.EventArgs | Translation Framework v3",
    "keywords": "Namespace TF3.Core.EventArgs Classes AssetEventArgs Asset events arguments. ContainerEventArgs Container events arguments. PatchEventArgs Patch events arguments. ScriptEventArgs Script events arguments."
  },
  "api/TF3.Core.EventArgs.PatchEventArgs.html": {
    "href": "api/TF3.Core.EventArgs.PatchEventArgs.html",
    "title": "Class PatchEventArgs | Translation Framework v3",
    "keywords": "Class PatchEventArgs Patch events arguments. Inheritance Object PatchEventArgs Namespace : TF3.Core.EventArgs Assembly : TF3.Core.dll Syntax public class PatchEventArgs : object Constructors | Improve this Doc View Source PatchEventArgs(PatchInfo) Initializes a new instance of the PatchEventArgs class. Declaration public PatchEventArgs(PatchInfo patchInfo) Parameters Type Name Description PatchInfo patchInfo Patch info. Properties | Improve this Doc View Source Data Gets the patch info. Declaration public PatchInfo Data { get; } Property Value Type Description PatchInfo"
  },
  "api/TF3.Core.EventArgs.ScriptEventArgs.html": {
    "href": "api/TF3.Core.EventArgs.ScriptEventArgs.html",
    "title": "Class ScriptEventArgs | Translation Framework v3",
    "keywords": "Class ScriptEventArgs Script events arguments. Inheritance Object ScriptEventArgs Namespace : TF3.Core.EventArgs Assembly : TF3.Core.dll Syntax public class ScriptEventArgs : object Constructors | Improve this Doc View Source ScriptEventArgs(GameScript) Initializes a new instance of the ScriptEventArgs class. Declaration public ScriptEventArgs(GameScript script) Parameters Type Name Description GameScript script Script info. Properties | Improve this Doc View Source Data Gets the script info. Declaration public GameScript Data { get; } Property Value Type Description GameScript"
  },
  "api/TF3.Core.Exceptions.ByteMismatchException.html": {
    "href": "api/TF3.Core.Exceptions.ByteMismatchException.html",
    "title": "Class ByteMismatchException | Translation Framework v3",
    "keywords": "Class ByteMismatchException Exception thrown when byte doesn't match with the expected one when applying a patch. Inheritance Object ByteMismatchException Namespace : TF3.Core.Exceptions Assembly : TF3.Core.dll Syntax public class ByteMismatchException : Exception Constructors | Improve this Doc View Source ByteMismatchException() Initializes a new instance of the ByteMismatchException class. Declaration public ByteMismatchException() | Improve this Doc View Source ByteMismatchException(SerializationInfo, StreamingContext) Initializes a new instance of the ByteMismatchException class. Declaration protected ByteMismatchException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source ByteMismatchException(String) Initializes a new instance of the ByteMismatchException class. Declaration public ByteMismatchException(string message) Parameters Type Name Description String message The error message that explains the reason for the exception. | Improve this Doc View Source ByteMismatchException(String, Exception) Initializes a new instance of the ByteMismatchException class. Declaration public ByteMismatchException(string message, Exception innerException) Parameters Type Name Description String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/TF3.Core.Exceptions.ChecksumMismatchException.html": {
    "href": "api/TF3.Core.Exceptions.ChecksumMismatchException.html",
    "title": "Class ChecksumMismatchException | Translation Framework v3",
    "keywords": "Class ChecksumMismatchException Exception thrown when checksum doesn't match with the expected one. Inheritance Object ChecksumMismatchException Namespace : TF3.Core.Exceptions Assembly : TF3.Core.dll Syntax public class ChecksumMismatchException : Exception Constructors | Improve this Doc View Source ChecksumMismatchException() Initializes a new instance of the ChecksumMismatchException class. Declaration public ChecksumMismatchException() | Improve this Doc View Source ChecksumMismatchException(SerializationInfo, StreamingContext) Initializes a new instance of the ChecksumMismatchException class. Declaration protected ChecksumMismatchException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source ChecksumMismatchException(String) Initializes a new instance of the ChecksumMismatchException class. Declaration public ChecksumMismatchException(string message) Parameters Type Name Description String message The error message that explains the reason for the exception. | Improve this Doc View Source ChecksumMismatchException(String, Exception) Initializes a new instance of the ChecksumMismatchException class. Declaration public ChecksumMismatchException(string message, Exception innerException) Parameters Type Name Description String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/TF3.Core.Exceptions.html": {
    "href": "api/TF3.Core.Exceptions.html",
    "title": "Namespace TF3.Core.Exceptions | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Exceptions Classes ByteMismatchException Exception thrown when byte doesn't match with the expected one when applying a patch. ChecksumMismatchException Exception thrown when checksum doesn't match with the expected one. UnknownConverterException Exception thrown when a Yarhl converter is not found."
  },
  "api/TF3.Core.Exceptions.UnknownConverterException.html": {
    "href": "api/TF3.Core.Exceptions.UnknownConverterException.html",
    "title": "Class UnknownConverterException | Translation Framework v3",
    "keywords": "Class UnknownConverterException Exception thrown when a Yarhl converter is not found. Inheritance Object UnknownConverterException Namespace : TF3.Core.Exceptions Assembly : TF3.Core.dll Syntax public class UnknownConverterException : Exception Constructors | Improve this Doc View Source UnknownConverterException() Initializes a new instance of the UnknownConverterException class. Declaration public UnknownConverterException() | Improve this Doc View Source UnknownConverterException(SerializationInfo, StreamingContext) Initializes a new instance of the UnknownConverterException class. Declaration protected UnknownConverterException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The System.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The System.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination. | Improve this Doc View Source UnknownConverterException(String) Initializes a new instance of the UnknownConverterException class. Declaration public UnknownConverterException(string message) Parameters Type Name Description String message The error message that explains the reason for the exception. | Improve this Doc View Source UnknownConverterException(String, Exception) Initializes a new instance of the UnknownConverterException class. Declaration public UnknownConverterException(string message, Exception innerException) Parameters Type Name Description String message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/TF3.Core.Formats.BinaryPatch.html": {
    "href": "api/TF3.Core.Formats.BinaryPatch.html",
    "title": "Class BinaryPatch | Translation Framework v3",
    "keywords": "Class BinaryPatch Binary patch format. Similar to 1337 patch format. Inheritance Object BinaryPatch Namespace : TF3.Core.Formats Assembly : TF3.Core.dll Syntax public class BinaryPatch : IFormat Constructors | Improve this Doc View Source BinaryPatch() Initializes a new instance of the BinaryPatch class. Declaration public BinaryPatch() Properties | Improve this Doc View Source FileName Gets or sets the file to apply patch. Declaration public string FileName { get; set; } Property Value Type Description String | Improve this Doc View Source Patches Gets or sets the list of byte replacements. Declaration public List<(long Rva, byte OriginalByte, byte NewByte)> Patches { get; set; } Property Value Type Description List < (, , ) < Int64 , Byte , Byte >> | Improve this Doc View Source RawOffset Gets or sets the data raw offset. Declaration public long RawOffset { get; set; } Property Value Type Description Int64"
  },
  "api/TF3.Core.Formats.DdsFileFormat.html": {
    "href": "api/TF3.Core.Formats.DdsFileFormat.html",
    "title": "Class DdsFileFormat | Translation Framework v3",
    "keywords": "Class DdsFileFormat IFormat wrapper for BCnEncoder.Shared.ImageFiles.DdsFile. Inheritance Object DdsFileFormat Namespace : TF3.Core.Formats Assembly : TF3.Core.dll Syntax public class DdsFileFormat : IFormat Constructors | Improve this Doc View Source DdsFileFormat() Initializes a new instance of the DdsFileFormat class. Declaration public DdsFileFormat() Properties | Improve this Doc View Source Internal Gets or sets the DdsFile. Declaration public DdsFile Internal { get; set; } Property Value Type Description DdsFile"
  },
  "api/TF3.Core.Formats.html": {
    "href": "api/TF3.Core.Formats.html",
    "title": "Namespace TF3.Core.Formats | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Formats Classes BinaryPatch Binary patch format. Similar to 1337 patch format. DdsFileFormat IFormat wrapper for BCnEncoder.Shared.ImageFiles.DdsFile."
  },
  "api/TF3.Core.GameScript.html": {
    "href": "api/TF3.Core.GameScript.html",
    "title": "Class GameScript | Translation Framework v3",
    "keywords": "Class GameScript Game script. Includes all the needed info to extract and repack game files. Inheritance Object GameScript Namespace : TF3.Core Assembly : TF3.Core.dll Syntax public class GameScript : object Properties | Improve this Doc View Source Assets Gets or sets the list of translatable assets. Declaration public List<AssetInfo> Assets { get; set; } Property Value Type Description List < AssetInfo > | Improve this Doc View Source Containers Gets or sets the list of containers in the game. Declaration public List<ContainerInfo> Containers { get; set; } Property Value Type Description List < ContainerInfo > | Improve this Doc View Source Game Gets or sets the script game name. Declaration public string Game { get; set; } Property Value Type Description String | Improve this Doc View Source Name Gets or sets the script name (short name). Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Parameters Gets or sets the list of parameters. Declaration public List<ParameterInfo> Parameters { get; set; } Property Value Type Description List < ParameterInfo > | Improve this Doc View Source Patches Gets or sets the list of patches. Declaration public List<PatchInfo> Patches { get; set; } Property Value Type Description List < PatchInfo > Methods | Improve this Doc View Source Extract(String, String) Extracts all translatable assets from the game. Declaration public void Extract(string gamePath, string outputPath) Parameters Type Name Description String gamePath Game install directory. String outputPath Output directory. | Improve this Doc View Source Rebuild(String, String, String) Rebuild all translatable assets from the game. Declaration public void Rebuild(string gamePath, string translationPath, string outputPath) Parameters Type Name Description String gamePath Game install directory. String translationPath Translation and patches directory. String outputPath Output directory. Events | Improve this Doc View Source AssetExtracted Event triggered AFTER asset extraction ends. Declaration public event EventHandler<AssetEventArgs> AssetExtracted Event Type Type Description EventHandler < AssetEventArgs > | Improve this Doc View Source AssetExtracting Event triggered BEFORE asset extraction begins. Declaration public event EventHandler<AssetEventArgs> AssetExtracting Event Type Type Description EventHandler < AssetEventArgs > | Improve this Doc View Source AssetRead Event triggered AFTER an asset is read. Declaration public event EventHandler<AssetEventArgs> AssetRead Event Type Type Description EventHandler < AssetEventArgs > | Improve this Doc View Source AssetReading Event triggered BEFORE an asset is read. Declaration public event EventHandler<AssetEventArgs> AssetReading Event Type Type Description EventHandler < AssetEventArgs > | Improve this Doc View Source AssetTranslated Event triggered AFTER an asset is translated. Declaration public event EventHandler<AssetEventArgs> AssetTranslated Event Type Type Description EventHandler < AssetEventArgs > | Improve this Doc View Source AssetTranslating Event triggered BEFORE an asset is translated. Declaration public event EventHandler<AssetEventArgs> AssetTranslating Event Type Type Description EventHandler < AssetEventArgs > | Improve this Doc View Source AssetTranslationFailed Event triggered if an asset failed to translate (missing files). Declaration public event EventHandler<AssetEventArgs> AssetTranslationFailed Event Type Type Description EventHandler < AssetEventArgs > | Improve this Doc View Source ContainerRead Event triggered AFTER a container is read. Declaration public event EventHandler<ContainerEventArgs> ContainerRead Event Type Type Description EventHandler < ContainerEventArgs > | Improve this Doc View Source ContainerReading Event triggered BEFORE a container is read. Declaration public event EventHandler<ContainerEventArgs> ContainerReading Event Type Type Description EventHandler < ContainerEventArgs > | Improve this Doc View Source ContainerWriting Event triggered BEFORE a container is written. Declaration public event EventHandler<ContainerEventArgs> ContainerWriting Event Type Type Description EventHandler < ContainerEventArgs > | Improve this Doc View Source ContainerWrote Event triggered AFTER a container is written. Declaration public event EventHandler<ContainerEventArgs> ContainerWrote Event Type Type Description EventHandler < ContainerEventArgs > | Improve this Doc View Source PatchApplied Event triggered AFTER a patch is appiled. Declaration public event EventHandler<PatchEventArgs> PatchApplied Event Type Type Description EventHandler < PatchEventArgs > | Improve this Doc View Source PatchApplying Event triggered BEFORE a patch is applied. Declaration public event EventHandler<PatchEventArgs> PatchApplying Event Type Type Description EventHandler < PatchEventArgs > | Improve this Doc View Source PatchSkipped Event triggered AFTER a patch is skipped. Declaration public event EventHandler<PatchEventArgs> PatchSkipped Event Type Type Description EventHandler < PatchEventArgs > | Improve this Doc View Source ScriptExtracted Event triggered AFTER extraction ends. Declaration public event EventHandler<ScriptEventArgs> ScriptExtracted Event Type Type Description EventHandler < ScriptEventArgs > | Improve this Doc View Source ScriptExtracting Event triggered BEFORE extraction begins. Declaration public event EventHandler<ScriptEventArgs> ScriptExtracting Event Type Type Description EventHandler < ScriptEventArgs > | Improve this Doc View Source ScriptRebuilding Event triggered BEFORE rebuilding begins. Declaration public event EventHandler<ScriptEventArgs> ScriptRebuilding Event Type Type Description EventHandler < ScriptEventArgs > | Improve this Doc View Source ScriptRebuilt Event triggered AFTER rebuilding ends. Declaration public event EventHandler<ScriptEventArgs> ScriptRebuilt Event Type Type Description EventHandler < ScriptEventArgs >"
  },
  "api/TF3.Core.Helpers.ChecksumHelper.html": {
    "href": "api/TF3.Core.Helpers.ChecksumHelper.html",
    "title": "Class ChecksumHelper | Translation Framework v3",
    "keywords": "Class ChecksumHelper Checksum functions. Inheritance Object ChecksumHelper Namespace : TF3.Core.Helpers Assembly : TF3.Core.dll Syntax public static class ChecksumHelper : object Methods | Improve this Doc View Source Check(Stream, UInt64) Validates the checksum of a stream. Declaration public static bool Check(Stream stream, ulong expected) Parameters Type Name Description Stream stream The input stream. UInt64 expected The expected checksum value. Returns Type Description Boolean True if checksum matches with the expected value. | Improve this Doc View Source Check(String, UInt64) Validates the checksum of a file. Declaration public static bool Check(string file, ulong expected) Parameters Type Name Description String file The input file. UInt64 expected The expected checksum value. Returns Type Description Boolean True if checksum matches with the expected value."
  },
  "api/TF3.Core.Helpers.html": {
    "href": "api/TF3.Core.Helpers.html",
    "title": "Namespace TF3.Core.Helpers | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Helpers Classes ChecksumHelper Checksum functions. YarhlNodeExtension Node extension methods."
  },
  "api/TF3.Core.Helpers.YarhlNodeExtension.html": {
    "href": "api/TF3.Core.Helpers.YarhlNodeExtension.html",
    "title": "Class YarhlNodeExtension | Translation Framework v3",
    "keywords": "Class YarhlNodeExtension Node extension methods. Inheritance Object YarhlNodeExtension Namespace : TF3.Core.Helpers Assembly : TF3.Core.dll Syntax public static class YarhlNodeExtension : object Methods | Improve this Doc View Source Transform(Node, List<ConverterInfo>, List<ParameterInfo>) Transforms a Yarhl node using a chain of converters. Declaration public static void Transform(this Node node, List<ConverterInfo> converters, List<ParameterInfo> parameters) Parameters Type Name Description Node node The original node. List < ConverterInfo > converters Converters list. List < ParameterInfo > parameters Allowed parameters list. | Improve this Doc View Source Translate(Node, Node, String) Calls a translator converter. Declaration public static void Translate(this Node node, Node translation, string translator) Parameters Type Name Description Node node The original node. Node translation The node with the translation. String translator The translator converter."
  },
  "api/TF3.Core.html": {
    "href": "api/TF3.Core.html",
    "title": "Namespace TF3.Core | Translation Framework v3",
    "keywords": "Namespace TF3.Core Classes GameScript Game script. Includes all the needed info to extract and repack game files. ScriptManager Script manager."
  },
  "api/TF3.Core.Models.AssetFileInfo.html": {
    "href": "api/TF3.Core.Models.AssetFileInfo.html",
    "title": "Class AssetFileInfo | Translation Framework v3",
    "keywords": "Class AssetFileInfo Game asset file info. Inheritance Object FileInfo AssetFileInfo Inherited Members FileInfo.Name FileInfo.ContainerId FileInfo.Path FileInfo.Checksum Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class AssetFileInfo : FileInfo Properties | Improve this Doc View Source Readers Gets or sets the list of converters needed to read the file. Declaration public List<ConverterInfo> Readers { get; set; } Property Value Type Description List < ConverterInfo > | Improve this Doc View Source Writers Gets or sets the list of converters needed to write the file. Declaration public List<ConverterInfo> Writers { get; set; } Property Value Type Description List < ConverterInfo >"
  },
  "api/TF3.Core.Models.AssetInfo.html": {
    "href": "api/TF3.Core.Models.AssetInfo.html",
    "title": "Class AssetInfo | Translation Framework v3",
    "keywords": "Class AssetInfo Game asset info. Inheritance Object AssetInfo Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class AssetInfo : object Properties | Improve this Doc View Source Extractors Gets or sets the list of converters needed to extract the translatable contents. Declaration public List<ConverterInfo> Extractors { get; set; } Property Value Type Description List < ConverterInfo > | Improve this Doc View Source Files Gets or sets the list of files in this asset. Declaration public List<AssetFileInfo> Files { get; set; } Property Value Type Description List < AssetFileInfo > | Improve this Doc View Source Id Gets or sets the asset id. Declaration public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source OutputNames Gets or sets the list of output names. Declaration public List<string> OutputNames { get; set; } Property Value Type Description List < String > | Improve this Doc View Source TranslationMergers Gets or sets the list of converters needed to merge the translation files. Declaration public List<ConverterInfo> TranslationMergers { get; set; } Property Value Type Description List < ConverterInfo > | Improve this Doc View Source Translator Gets or sets the name of the translator converter. Declaration public string Translator { get; set; } Property Value Type Description String"
  },
  "api/TF3.Core.Models.ContainerInfo.html": {
    "href": "api/TF3.Core.Models.ContainerInfo.html",
    "title": "Class ContainerInfo | Translation Framework v3",
    "keywords": "Class ContainerInfo Game file container info. Inheritance Object ContainerInfo Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class ContainerInfo : object Properties | Improve this Doc View Source Checksum Gets or sets the container checksum. If it is 0, it won't be checked. Declaration public ulong Checksum { get; set; } Property Value Type Description UInt64 | Improve this Doc View Source Containers Gets or sets the list of containers in this container. Declaration public List<ContainerInfo> Containers { get; set; } Property Value Type Description List < ContainerInfo > | Improve this Doc View Source Id Gets or sets the container id. Declaration public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source Name Gets or sets the container name. Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Path Gets or sets the container path. Declaration public string Path { get; set; } Property Value Type Description String | Improve this Doc View Source Readers Gets or sets the list of converters needed to read the container. Declaration public List<ConverterInfo> Readers { get; set; } Property Value Type Description List < ConverterInfo > | Improve this Doc View Source Writers Gets or sets the list of converters needed to write the container. Declaration public List<ConverterInfo> Writers { get; set; } Property Value Type Description List < ConverterInfo >"
  },
  "api/TF3.Core.Models.ConverterInfo.html": {
    "href": "api/TF3.Core.Models.ConverterInfo.html",
    "title": "Class ConverterInfo | Translation Framework v3",
    "keywords": "Class ConverterInfo Yarhl converter info. Inheritance Object ConverterInfo Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class ConverterInfo : object Properties | Improve this Doc View Source ParameterId Gets or sets the converter parameter id. Declaration public string ParameterId { get; set; } Property Value Type Description String | Improve this Doc View Source TypeName Gets or sets the converter type name. Declaration public string TypeName { get; set; } Property Value Type Description String"
  },
  "api/TF3.Core.Models.FileInfo.html": {
    "href": "api/TF3.Core.Models.FileInfo.html",
    "title": "Class FileInfo | Translation Framework v3",
    "keywords": "Class FileInfo Game file info. Inheritance Object FileInfo AssetFileInfo Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class FileInfo : object Properties | Improve this Doc View Source Checksum Gets or sets the file checksum. If it is 0, it won't be checked. Declaration public ulong Checksum { get; set; } Property Value Type Description UInt64 | Improve this Doc View Source ContainerId Gets or sets the container id. Declaration public string ContainerId { get; set; } Property Value Type Description String | Improve this Doc View Source Name Gets or sets the file name. Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Path Gets or sets the file path (inside the container). Declaration public string Path { get; set; } Property Value Type Description String"
  },
  "api/TF3.Core.Models.html": {
    "href": "api/TF3.Core.Models.html",
    "title": "Namespace TF3.Core.Models | Translation Framework v3",
    "keywords": "Namespace TF3.Core.Models Classes AssetFileInfo Game asset file info. AssetInfo Game asset info. ContainerInfo Game file container info. ConverterInfo Yarhl converter info. FileInfo Game file info. ParameterInfo Converter parameter info. PatchInfo Binary patch info."
  },
  "api/TF3.Core.Models.ParameterInfo.html": {
    "href": "api/TF3.Core.Models.ParameterInfo.html",
    "title": "Class ParameterInfo | Translation Framework v3",
    "keywords": "Class ParameterInfo Converter parameter info. Inheritance Object ParameterInfo Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class ParameterInfo : object Properties | Improve this Doc View Source Id Gets or sets the parameter id. Declaration public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source TypeName Gets or sets the parameter type name. Declaration public string TypeName { get; set; } Property Value Type Description String | Improve this Doc View Source Value Gets or sets the parameter value. Declaration public JsonElement Value { get; set; } Property Value Type Description JsonElement"
  },
  "api/TF3.Core.Models.PatchInfo.html": {
    "href": "api/TF3.Core.Models.PatchInfo.html",
    "title": "Class PatchInfo | Translation Framework v3",
    "keywords": "Class PatchInfo Binary patch info. Inheritance Object PatchInfo Namespace : TF3.Core.Models Assembly : TF3.Core.dll Syntax public class PatchInfo : object Properties | Improve this Doc View Source File Gets or sets the file to patch. Declaration public FileInfo File { get; set; } Property Value Type Description FileInfo | Improve this Doc View Source Id Gets or sets the patch id. Declaration public string Id { get; set; } Property Value Type Description String | Improve this Doc View Source Patch Gets or sets the patch to apply. Declaration public string Patch { get; set; } Property Value Type Description String | Improve this Doc View Source RawAddress Gets or sets the data raw address (in exe files). Declaration public long RawAddress { get; set; } Property Value Type Description Int64 | Improve this Doc View Source VirtualAddress Gets or sets the data virtual address (in exe files). Declaration public long VirtualAddress { get; set; } Property Value Type Description Int64"
  },
  "api/TF3.Core.ScriptManager.html": {
    "href": "api/TF3.Core.ScriptManager.html",
    "title": "Class ScriptManager | Translation Framework v3",
    "keywords": "Class ScriptManager Script manager. Inheritance Object ScriptManager Namespace : TF3.Core Assembly : TF3.Core.dll Syntax public static class ScriptManager : object Properties | Improve this Doc View Source Scripts Gets a list of loaded scripts. Declaration public static IReadOnlyList<GameScript> Scripts { get; } Property Value Type Description IReadOnlyList < GameScript > Methods | Improve this Doc View Source Clear() Empties the loaded scripts. Declaration public static void Clear() | Improve this Doc View Source LoadScripts(String) Loads all the scripts in a directory. Declaration public static void LoadScripts(string path) Parameters Type Name Description String path The directory containing the scripts."
  },
  "CONTRIBUTING.html": {
    "href": "CONTRIBUTING.html",
    "title": "Contributing to the project | Translation Framework v3",
    "keywords": "Contributing to the project Thanks for taking the time to contribute! ✨ In this document you will find all the information you need to make sure the project continues to be the high-quality product we want to be! Reporting issues Issues When reporting a problem, be as specific as possible. Ideally, you should provide an small snippet of code that reproduces the issue. Try to provide also the following information: OS: Linux / Windows / Mac OS Runtime: .NET Framework, Mono, .NET Core Version of the product Stacktrace if any What's happening and what you expect to happen Features If you want to ask for a new feature, first make sure it hasn't been reported yet by using the search box in the issue tab. Make sure that the feature aligns with the direction of the project. Pull Request Before starting a pull request, create an issue requesting the feature you would like to see and implement. If you are fixing a bug, create also an issue to be able to track the problem. State that you would like to work on that. The team will reply to the issue as soon as possible, discussing the proposal if needed. This guarantee that later on the Pull Request we don't reject the proposal without having a discussion first and we don't waste time. In general, the process to create a pull request is: Create an issue describing the bug or feature and state you would like to work on that. The team will cheer you and/or discuss with you the issue. Fork the project. Clone your forked project and create a git branch. Make the necessary code changes in as many commits as you want. The commit message should follow this convention: :emoji: Short description #IssueID Long description if needed. Create a pull request. After reviewing your changes and making any new commits if needed, the team will approve and merge it. For a complete list of emoji description see this repository . Code Guidelines We follow the DotNet Runtime coding style . File headers ✔️ DO put the license in the file header with this format: // // <FileName>.cs // // Author: // <AuthorName> <email@example.com> // // Copyright (c) <Year> <AuthorName> // // Permission is hereby granted, free of charge, to any person obtaining a copy // of this software and associated documentation files (the \"Software\"), to deal // in the Software without restriction, including without limitation the rights // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell // copies of the Software, and to permit persons to whom the Software is // furnished to do so, subject to the following conditions: // // The above copyright notice and this permission notice shall be included in // all copies or substantial portions of the Software. // // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN // THE SOFTWARE. Usings ✔️ DO put the using inside the namespace. ✔️ DO include all the namespaces you are using. ✔️ DO use the using statement for IDisposable types."
  },
  "dev/Changelog.html": {
    "href": "dev/Changelog.html",
    "title": "vNext (December 20, 2020) | Translation Framework v3",
    "keywords": "vNext (December 20, 2020) As part of this release we had 9 issues closed. enhancements #1 Read and Write Yakuza PAR archives #2 Read and write PAR archives #3 Read and write ARMP files #4 Use scripts #5 Move plugins to new projects #9 Replace YAML with JSON #10 Add tests #11 Update dependencies #12 Upgrade to .NET6 and update packages"
  },
  "guides/Contributing.html": {
    "href": "guides/Contributing.html",
    "title": "Contributing to the project | Translation Framework v3",
    "keywords": "Contributing to the project Thanks for taking the time to contribute! ✨ In this document you will find all the information you need to make sure the project continues to be the high-quality product we want to be! Reporting issues Issues When reporting a problem, be as specific as possible. Ideally, you should provide an small snippet of code that reproduces the issue. Try to provide also the following information: OS: Linux / Windows / Mac OS Runtime: .NET Framework, Mono, .NET Core Version of the product Stacktrace if any What's happening and what you expect to happen Features If you want to ask for a new feature, first make sure it hasn't been reported yet by using the search box in the issue tab. Make sure that the feature aligns with the direction of the project. Pull Request Before starting a pull request, create an issue requesting the feature you would like to see and implement. If you are fixing a bug, create also an issue to be able to track the problem. State that you would like to work on that. The team will reply to the issue as soon as possible, discussing the proposal if needed. This guarantee that later on the Pull Request we don't reject the proposal without having a discussion first and we don't waste time. In general, the process to create a pull request is: Create an issue describing the bug or feature and state you would like to work on that. The team will cheer you and/or discuss with you the issue. Fork the project. Clone your forked project and create a git branch. Make the necessary code changes in as many commits as you want. The commit message should follow this convention: :emoji: Short description #IssueID Long description if needed. Create a pull request. After reviewing your changes and making any new commits if needed, the team will approve and merge it. For a complete list of emoji description see this repository . Code Guidelines We follow the DotNet Runtime coding style . File headers ✔️ DO put the license in the file header with this format: // // <FileName>.cs // // Author: // <AuthorName> <email@example.com> // // Copyright (c) <Year> <AuthorName> // // Permission is hereby granted, free of charge, to any person obtaining a copy // of this software and associated documentation files (the \"Software\"), to deal // in the Software without restriction, including without limitation the rights // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell // copies of the Software, and to permit persons to whom the Software is // furnished to do so, subject to the following conditions: // // The above copyright notice and this permission notice shall be included in // all copies or substantial portions of the Software. // // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN // THE SOFTWARE. Usings ✔️ DO put the using inside the namespace. ✔️ DO include all the namespaces you are using. ✔️ DO use the using statement for IDisposable types."
  },
  "guides/First-Steps.html": {
    "href": "guides/First-Steps.html",
    "title": "First steps | Translation Framework v3",
    "keywords": "First steps Welcome to this project!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Translation Framework v3 (Powered by Yarhl) | Translation Framework v3",
    "keywords": "Translation Framework v3 (Powered by Yarhl ) Current State This framework is in alpha state and under active development. There might be breaking changes at any moment. Plugins Currently, 2 games are supported: Yakuza Kiwami 2 (Steam) Zwei: The Arges Adventure (Steam) Usage NOTE: This is a command line application. \"Double clicking\" on the exe is not enough. You have to copy plugins files to the app folders. See each plugin README for details. List available plugins TF3.CommandLine.exe listscripts Extract assets TF3.CommandLine.exe extract --script [script-name] --install-dir [game-files-directory] --output-dir [output-directory] Rebuild assets TF3.CommandLine.exe rebuild --script [script-name] --install-dir [game-files-directory] --translation-dir [translation-files-directory] --output-dir [output-directory] Credits Thanks to Pleonex for Yarhl and PleOps.Cake . Other libraries used: CommandLineParser , Dahomey.Json , xxHash , BCnEncoder.Net , ImageSharp Icon by Papirus Development Team ."
  },
  "README.html": {
    "href": "README.html",
    "title": "Translation Framework v3 (Powered by Yarhl) | Translation Framework v3",
    "keywords": "Translation Framework v3 (Powered by Yarhl ) Current State This framework is in alpha state and under active development. There might be breaking changes at any moment. Plugins Currently, 2 games are supported: Yakuza Kiwami 2 (Steam) Zwei: The Arges Adventure (Steam) Usage NOTE: This is a command line application. \"Double clicking\" on the exe is not enough. You have to copy plugins files to the app folders. See each plugin README for details. List available plugins TF3.CommandLine.exe listscripts Extract assets TF3.CommandLine.exe extract --script [script-name] --install-dir [game-files-directory] --output-dir [output-directory] Rebuild assets TF3.CommandLine.exe rebuild --script [script-name] --install-dir [game-files-directory] --translation-dir [translation-files-directory] --output-dir [output-directory] Credits Thanks to Pleonex for Yarhl and PleOps.Cake . Other libraries used: CommandLineParser , Dahomey.Json , xxHash , BCnEncoder.Net , ImageSharp Icon by Papirus Development Team ."
  }
}